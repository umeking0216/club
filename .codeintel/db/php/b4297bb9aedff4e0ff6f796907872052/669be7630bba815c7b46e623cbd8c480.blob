<scope ilk="blob" lang="PHP" name="rw.php" src="/usr/share/pear/PEAR/PackageFile/v2/rw.php"><import line="18" module="PEAR/PackageFile/v2.php" /><scope classrefs="PEAR_PackageFile_v2" doc="@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a8" ilk="class" line="29" lineend="1603" name="PEAR_PackageFile_v2_rw"><scope doc="&#xA;&lt;string&gt; Extension  - name&#xA;Returns bool  - success of operation&#xA;" ilk="function" line="35" lineend="51" name="setProvidesExtension" returns="bool" signature="bool setProvidesExtension($extension)"><variable ilk="argument" line="35" name="extension" /></scope><variable citdl="this._mergeTag()" line="45" name="_packageInfo" /><scope ilk="function" line="53" lineend="73" name="setPackage" returns="this._packageInfo" signature="setPackage($package)"><variable ilk="argument" line="53" name="package" /></scope><variable citdl="int" line="55" name="_isValid" /><scope doc="&#xA;set this as a package.xml version 2.1&#xA;Access private&#xA;" ilk="function" line="79" lineend="96" name="_setPackageVersion2_1" signature="_setPackageVersion2_1()"><variable citdl="array()" line="90" name="info" /></scope><scope ilk="function" line="98" lineend="113" name="setUri" signature="setUri($uri)"><variable ilk="argument" line="98" name="uri" /></scope><scope ilk="function" line="115" lineend="130" name="setChannel" signature="setChannel($channel)"><variable ilk="argument" line="115" name="channel" /></scope><scope ilk="function" line="132" lineend="146" name="setExtends" signature="setExtends($extends)"><variable ilk="argument" line="132" name="extends" /></scope><scope ilk="function" line="148" lineend="162" name="setSummary" signature="setSummary($summary)"><variable ilk="argument" line="148" name="summary" /></scope><scope ilk="function" line="164" lineend="178" name="setDescription" signature="setDescription($desc)"><variable ilk="argument" line="164" name="desc" /></scope><scope doc="&#xA;Adds a new maintainer - no checking of duplicates is performed, use&#xA;updatemaintainer for that purpose.&#xA;" ilk="function" line="184" lineend="227" name="addMaintainer" returns="boolean" signature="addMaintainer($role, $handle, $name, $email, $active = &apos;yes&apos;)"><variable ilk="argument" line="184" name="role" /><variable ilk="argument" line="184" name="handle" /><variable ilk="argument" line="184" name="name" /><variable ilk="argument" line="184" name="email" /><variable default="&apos;yes&apos;" ilk="argument" line="184" name="active" /><variable citdl="array()" line="206" name="testarr" /><variable citdl="array()[]" line="207" name="testrole" /></scope><scope ilk="function" line="229" lineend="263" name="updateMaintainer" returns="this.addMaintainer()" signature="updateMaintainer($newrole, $handle, $name, $email, $active = &apos;yes&apos;)"><variable ilk="argument" line="229" name="newrole" /><variable ilk="argument" line="229" name="handle" /><variable ilk="argument" line="229" name="name" /><variable ilk="argument" line="229" name="email" /><variable default="&apos;yes&apos;" ilk="argument" line="229" name="active" /><variable citdl="this._packageInfo" line="236" name="info" /><variable citdl="boolean" line="231" name="found" /><variable citdl="array()[]" line="232" name="role" /><variable line="243" name="i" /><variable citdl="info[]" line="243" name="maintainer" /></scope><scope ilk="function" line="265" lineend="302" name="deleteMaintainer" returns="boolean" signature="deleteMaintainer($handle)"><variable ilk="argument" line="265" name="handle" /><variable line="275" name="i" /><variable citdl="boolean" line="267" name="found" /><variable citdl="array()[]" line="268" name="role" /><variable citdl="this._packageInfo[]" line="275" name="maintainer" /></scope><scope ilk="function" line="304" lineend="317" name="setReleaseVersion" signature="setReleaseVersion($version)"><variable ilk="argument" line="304" name="version" /></scope><scope ilk="function" line="319" lineend="332" name="setAPIVersion" signature="setAPIVersion($version)"><variable ilk="argument" line="319" name="version" /></scope><scope doc="&#xA;snapshot|devel|alpha|beta|stable&#xA;" ilk="function" line="337" lineend="350" name="setReleaseStability" signature="setReleaseStability($state)"><variable ilk="argument" line="337" name="state" /></scope><scope doc="@param devel|alpha|beta|stable" ilk="function" line="355" lineend="368" name="setAPIStability" signature="setAPIStability($state)"><variable ilk="argument" line="355" name="state" /></scope><scope ilk="function" line="370" lineend="393" name="setLicense" signature="setLicense($license, $uri = false, $filesource = false)"><variable ilk="argument" line="370" name="license" /><variable default="false" ilk="argument" line="370" name="uri" /><variable default="false" ilk="argument" line="370" name="filesource" /><variable citdl="array()" line="381" name="attribs" /></scope><scope ilk="function" line="395" lineend="407" name="setNotes" signature="setNotes($notes)"><variable ilk="argument" line="395" name="notes" /></scope><scope doc="&#xA;This is only used at install-time, after all serialization&#xA;is over.&#xA;&lt;string&gt; file  - name&#xA;&lt;string&gt; installed  - path&#xA;" ilk="function" line="415" lineend="421" name="setInstalledAs" returns="this._packageInfo" signature="setInstalledAs($file, $path)"><variable ilk="argument" line="415" name="file" /><variable ilk="argument" line="415" name="path" /></scope><scope doc="&#xA;This is only used at install-time, after all serialization&#xA;is over.&#xA;" ilk="function" line="427" lineend="435" name="installedFile" signature="installedFile($file, $atts)"><variable ilk="argument" line="427" name="file" /><variable ilk="argument" line="427" name="atts" /></scope><scope doc="&#xA;Reset the listing of package contents&#xA;&lt;string&gt; base  - installation dir for the whole package, if any&#xA;" ilk="function" line="441" lineend="462" name="clearContents" signature="clearContents($baseinstall = false)"><variable default="false" ilk="argument" line="441" name="baseinstall" /></scope><variable citdl="boolean" line="443" name="_filesValid" /><scope doc="&#xA;&lt;string&gt; relative  - path of the bundled package.&#xA;" ilk="function" line="467" lineend="480" name="addBundledPackage" returns="boolean" signature="addBundledPackage($path)"><variable ilk="argument" line="467" name="path" /></scope><scope doc="&#xA;&lt;string&gt; file  - name&#xA;&lt;pear_task_common&gt; a  - read/write task&#xA;" ilk="function" line="486" lineend="545" name="addTaskToFile" returns="boolean" signature="addTaskToFile($filename, $task)"><variable ilk="argument" line="486" name="filename" /><variable ilk="argument" line="486" name="task" /><variable citdl="this._packageInfo" line="504" name="files" /><variable citdl="boolean" line="507" name="ind" /><variable line="511" name="i" /><variable citdl="files[]" line="511" name="file" /><variable line="520" name="t" /></scope><scope doc="&#xA;&lt;string&gt; path  - to the file&#xA;&lt;string&gt; filename  - &#xA;&lt;array&gt; extra  - attributes&#xA;" ilk="function" line="552" lineend="583" name="addFile" returns="boolean" signature="addFile($dir, $file, $attrs)"><variable ilk="argument" line="552" name="dir" /><variable ilk="argument" line="552" name="file" /><variable ilk="argument" line="552" name="attrs" /></scope><scope doc="&#xA;&lt;string&gt; Dependent  - package name&#xA;&lt;string&gt; Dependent  - package&apos;s channel name&#xA;&lt;string&gt; minimum  - version of specified package that this release is guaranteed to be&#xA;              compatible with&#xA;&lt;string&gt; maximum  - version of specified package that this release is guaranteed to be&#xA;              compatible with&#xA;&lt;string&gt; versions  - of specified package that this release is not compatible with&#xA;" ilk="function" line="594" lineend="612" name="addCompatiblePackage" signature="addCompatiblePackage($name, $channel, $min, $max, $exclude = false)"><variable ilk="argument" line="594" name="name" /><variable ilk="argument" line="594" name="channel" /><variable ilk="argument" line="594" name="min" /><variable ilk="argument" line="594" name="max" /><variable default="false" ilk="argument" line="594" name="exclude" /><variable citdl="array()" line="602" name="set" /></scope><scope doc="&#xA;Removes the &lt;usesrole&gt; tag entirely&#xA;" ilk="function" line="617" lineend="622" name="resetUsesrole" signature="resetUsesrole()" /><scope doc="@param string&#xA;@param string package name or uri&#xA;@param string channel name if non-uri" ilk="function" line="629" lineend="643" name="addUsesrole" signature="addUsesrole($role, $packageOrUri, $channel = false)"><variable ilk="argument" line="629" name="role" /><variable ilk="argument" line="629" name="packageOrUri" /><variable default="false" ilk="argument" line="629" name="channel" /><variable citdl="array()" line="630" name="set" /></scope><scope doc="&#xA;Removes the &lt;usestask&gt; tag entirely&#xA;" ilk="function" line="648" lineend="653" name="resetUsestask" signature="resetUsestask()" /><scope doc="@param string&#xA;@param string package name or uri&#xA;@param string channel name if non-uri" ilk="function" line="661" lineend="675" name="addUsestask" signature="addUsestask($task, $packageOrUri, $channel = false)"><variable ilk="argument" line="661" name="task" /><variable ilk="argument" line="661" name="packageOrUri" /><variable default="false" ilk="argument" line="661" name="channel" /><variable citdl="array()" line="662" name="set" /></scope><scope doc="&#xA;Remove all compatible tags&#xA;" ilk="function" line="680" lineend="683" name="clearCompatible" signature="clearCompatible()" /><scope doc="&#xA;Reset dependencies prior to adding new ones&#xA;" ilk="function" line="688" lineend="698" name="clearDeps" signature="clearDeps()" /><scope doc="&#xA;&lt;string&gt; minimum  - PHP version allowed&#xA;&lt;string&gt; maximum  - PHP version allowed&#xA;&lt;array&gt; $exclude  - incompatible PHP versions&#xA;" ilk="function" line="705" lineend="736" name="setPhpDep" returns="boolean" signature="setPhpDep($min, $max = false, array $exclude = false)"><variable ilk="argument" line="705" name="min" /><variable default="false" ilk="argument" line="705" name="max" /><variable citdl="array" default="false" ilk="argument" line="705" name="exclude" /><variable citdl="array()" line="711" name="dep" /></scope><scope doc="&#xA;&lt;string&gt; minimum  - allowed PEAR installer version&#xA;&lt;string&gt; maximum  - allowed PEAR installer version&#xA;&lt;string&gt; recommended  - PEAR installer version&#xA;&lt;array&gt; incompatible  - version of the PEAR installer&#xA;" ilk="function" line="744" lineend="777" name="setPearinstallerDep" signature="setPearinstallerDep($min, $max = false, $recommended = false, $exclude = false)"><variable ilk="argument" line="744" name="min" /><variable default="false" ilk="argument" line="744" name="max" /><variable default="false" ilk="argument" line="744" name="recommended" /><variable default="false" ilk="argument" line="744" name="exclude" /><variable citdl="array()" line="750" name="dep" /></scope><scope doc="&#xA;Mark a package as conflicting with this package&#xA;&lt;string&gt; package  - name&#xA;&lt;string&gt; package  - channel&#xA;&lt;string&gt; extension  - this package provides, if any&#xA;&lt;string|false&gt; minimum  - version required&#xA;&lt;string|false&gt; maximum  - version allowed&#xA;&lt;array|false&gt; versions  - to exclude from installation&#xA;" ilk="function" line="788" lineend="802" name="addConflictingPackageDepWithChannel" signature="addConflictingPackageDepWithChannel($name, $channel, $providesextension = false, $min = false, $max = false, $exclude = false)"><variable ilk="argument" line="788" name="name" /><variable ilk="argument" line="788" name="channel" /><variable default="false" ilk="argument" line="788" name="providesextension" /><variable default="false" ilk="argument" line="788" name="min" /><variable default="false" ilk="argument" line="788" name="max" /><variable default="false" ilk="argument" line="788" name="exclude" /><variable citdl="this._constructDep()" line="793" name="dep" /></scope><scope doc="&#xA;Mark a package as conflicting with this package&#xA;&lt;string&gt; package  - name&#xA;&lt;string&gt; package  - channel&#xA;&lt;string&gt; extension  - this package provides, if any&#xA;" ilk="function" line="810" lineend="830" name="addConflictingPackageDepWithUri" signature="addConflictingPackageDepWithUri($name, $uri, $providesextension = false)"><variable ilk="argument" line="810" name="name" /><variable ilk="argument" line="810" name="uri" /><variable default="false" ilk="argument" line="810" name="providesextension" /><variable citdl="array()" line="818" name="dep" /></scope><scope ilk="function" line="832" lineend="843" name="addDependencyGroup" signature="addDependencyGroup($name, $hint)"><variable ilk="argument" line="832" name="name" /><variable ilk="argument" line="832" name="hint" /></scope><scope doc="&#xA;&lt;string&gt; package  - name&#xA;&lt;string|false&gt; channel  - name, false if this is a uri&#xA;&lt;string|false&gt; uri  - name, false if this is a channel&#xA;&lt;string|false&gt; minimum  - version required&#xA;&lt;string|false&gt; maximum  - version allowed&#xA;&lt;string|false&gt; recommended  - installation version&#xA;&lt;array|false&gt; versions  - to exclude from installation&#xA;&lt;string&gt; extension  - this package provides, if any&#xA;&lt;bool&gt; if  - true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;&lt;bool&gt; if  - true, tells the installer to negate this dependency (conflicts)&#xA;Returns array &#xA;Access private&#xA;" ilk="function" line="860" lineend="898" name="_constructDep" returns="array" signature="array _constructDep($name, $channel, $uri, $min, $max, $recommended, $exclude, $providesextension = false, $nodefault = false, $conflicts = false)"><variable ilk="argument" line="860" name="name" /><variable ilk="argument" line="860" name="channel" /><variable ilk="argument" line="860" name="uri" /><variable ilk="argument" line="860" name="min" /><variable ilk="argument" line="860" name="max" /><variable ilk="argument" line="860" name="recommended" /><variable ilk="argument" line="860" name="exclude" /><variable default="false" ilk="argument" line="860" name="providesextension" /><variable default="false" ilk="argument" line="860" name="nodefault" /><variable default="false" ilk="argument" line="860" name="conflicts" /><variable citdl="array()" line="867" name="dep" /></scope><scope doc="@param package|subpackage&#xA;@param string group name&#xA;@param string package name&#xA;@param string package channel&#xA;@param string minimum version&#xA;@param string maximum version&#xA;@param string recommended version&#xA;@param array|false optional excluded versions&#xA;@param string extension this package provides, if any&#xA;@param bool if true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;@return bool false if the dependency group has not been initialized with&#xA;             {@link addDependencyGroup()}, or a subpackage is added with&#xA;             a providesextension" ilk="function" line="916" lineend="926" name="addGroupPackageDepWithChannel" returns="bool" signature="bool addGroupPackageDepWithChannel($type, $groupname, $name, $channel, $min = false, $max = false, $recommended = false, $exclude = false, $providesextension = false, $nodefault = false)"><variable ilk="argument" line="916" name="type" /><variable ilk="argument" line="916" name="groupname" /><variable ilk="argument" line="916" name="name" /><variable ilk="argument" line="916" name="channel" /><variable default="false" ilk="argument" line="916" name="min" /><variable default="false" ilk="argument" line="916" name="max" /><variable default="false" ilk="argument" line="916" name="recommended" /><variable default="false" ilk="argument" line="916" name="exclude" /><variable default="false" ilk="argument" line="916" name="providesextension" /><variable default="false" ilk="argument" line="916" name="nodefault" /><variable citdl="this._constructDep()" line="924" name="dep" /></scope><scope doc="@param package|subpackage&#xA;@param string group name&#xA;@param string package name&#xA;@param string package uri&#xA;@param string extension this package provides, if any&#xA;@param bool if true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;@return bool false if the dependency group has not been initialized with&#xA;             {@link addDependencyGroup()}" ilk="function" line="939" lineend="948" name="addGroupPackageDepWithURI" returns="bool" signature="bool addGroupPackageDepWithURI($type, $groupname, $name, $uri, $providesextension = false, $nodefault = false)"><variable ilk="argument" line="939" name="type" /><variable ilk="argument" line="939" name="groupname" /><variable ilk="argument" line="939" name="name" /><variable ilk="argument" line="939" name="uri" /><variable default="false" ilk="argument" line="939" name="providesextension" /><variable default="false" ilk="argument" line="939" name="nodefault" /><variable citdl="this._constructDep()" line="946" name="dep" /></scope><scope doc="&#xA;&lt;string&gt; group  - name (must be pre-existing)&#xA;&lt;string&gt; extension  - name&#xA;&lt;string&gt; minimum  - version allowed&#xA;&lt;string&gt; maximum  - version allowed&#xA;&lt;string&gt; recommended  - version&#xA;&lt;array&gt; incompatible  - versions&#xA;" ilk="function" line="958" lineend="964" name="addGroupExtensionDep" returns="this._addGroupDependency()" signature="addGroupExtensionDep($groupname, $name, $min = false, $max = false, $recommended = false, $exclude = false)"><variable ilk="argument" line="958" name="groupname" /><variable ilk="argument" line="958" name="name" /><variable default="false" ilk="argument" line="958" name="min" /><variable default="false" ilk="argument" line="958" name="max" /><variable default="false" ilk="argument" line="958" name="recommended" /><variable default="false" ilk="argument" line="958" name="exclude" /><variable citdl="this._constructDep()" line="962" name="dep" /></scope><scope doc="@param package|subpackage|extension&#xA;@param array dependency contents&#xA;@param string name of the dependency group to add this to&#xA;@return boolean&#xA;@access private" ilk="function" line="973" lineend="1012" name="_addGroupDependency" returns="boolean" signature="boolean _addGroupDependency($type, $dep, $groupname)"><variable ilk="argument" line="973" name="type" /><variable ilk="argument" line="973" name="dep" /><variable ilk="argument" line="973" name="groupname" /><variable line="998" name="i" /><variable citdl="array()" line="975" name="arr" /><variable citdl="this._packageInfo[]" line="998" name="group" /></scope><variable line="991" name="dep" /><scope doc="@param optional|required&#xA;@param string package name&#xA;@param string package channel&#xA;@param string minimum version&#xA;@param string maximum version&#xA;@param string recommended version&#xA;@param string extension this package provides, if any&#xA;@param bool if true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;@param array|false optional excluded versions" ilk="function" line="1026" lineend="1048" name="addPackageDepWithChannel" signature="addPackageDepWithChannel($type, $name, $channel, $min = false, $max = false, $recommended = false, $exclude = false, $providesextension = false, $nodefault = false)"><variable ilk="argument" line="1026" name="type" /><variable ilk="argument" line="1026" name="name" /><variable ilk="argument" line="1026" name="channel" /><variable default="false" ilk="argument" line="1026" name="min" /><variable default="false" ilk="argument" line="1026" name="max" /><variable default="false" ilk="argument" line="1026" name="recommended" /><variable default="false" ilk="argument" line="1026" name="exclude" /><variable default="false" ilk="argument" line="1026" name="providesextension" /><variable default="false" ilk="argument" line="1026" name="nodefault" /><variable citdl="this._constructDep()" line="1039" name="dep" /><variable citdl="array()" line="1034" name="arr" /></scope><scope doc="@param optional|required&#xA;@param string name of the package&#xA;@param string uri of the package&#xA;@param string extension this package provides, if any&#xA;@param bool if true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package" ilk="function" line="1058" lineend="1076" name="addPackageDepWithUri" signature="addPackageDepWithUri($type, $name, $uri, $providesextension = false, $nodefault = false)"><variable ilk="argument" line="1058" name="type" /><variable ilk="argument" line="1058" name="name" /><variable ilk="argument" line="1058" name="uri" /><variable default="false" ilk="argument" line="1058" name="providesextension" /><variable default="false" ilk="argument" line="1058" name="nodefault" /><variable citdl="this._constructDep()" line="1067" name="dep" /><variable citdl="array()" line="1062" name="arr" /></scope><scope doc="&#xA;&lt;optional|required&gt; optional,  - required&#xA;&lt;string&gt; package  - name&#xA;&lt;string&gt; package  - channel&#xA;&lt;string&gt; minimum  - version&#xA;&lt;string&gt; maximum  - version&#xA;&lt;string&gt; recommended  - version&#xA;&lt;array&gt; incompatible  - versions&#xA;&lt;bool&gt; if  - true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;" ilk="function" line="1089" lineend="1108" name="addSubpackageDepWithChannel" signature="addSubpackageDepWithChannel($type, $name, $channel, $min = false, $max = false, $recommended = false, $exclude = false, $nodefault = false)"><variable ilk="argument" line="1089" name="type" /><variable ilk="argument" line="1089" name="name" /><variable ilk="argument" line="1089" name="channel" /><variable default="false" ilk="argument" line="1089" name="min" /><variable default="false" ilk="argument" line="1089" name="max" /><variable default="false" ilk="argument" line="1089" name="recommended" /><variable default="false" ilk="argument" line="1089" name="exclude" /><variable default="false" ilk="argument" line="1089" name="nodefault" /><variable citdl="this._constructDep()" line="1099" name="dep" /><variable citdl="array()" line="1094" name="arr" /></scope><scope doc="&#xA;&lt;optional|required&gt; optional,  - required&#xA;&lt;string&gt; package  - name&#xA;&lt;string&gt; package  - uri for download&#xA;&lt;bool&gt; if  - true, tells the installer to ignore the default optional dependency group&#xA;            when installing this package&#xA;" ilk="function" line="1117" lineend="1133" name="addSubpackageDepWithUri" signature="addSubpackageDepWithUri($type, $name, $uri, $nodefault = false)"><variable ilk="argument" line="1117" name="type" /><variable ilk="argument" line="1117" name="name" /><variable ilk="argument" line="1117" name="uri" /><variable default="false" ilk="argument" line="1117" name="nodefault" /><variable citdl="this._constructDep()" line="1124" name="dep" /><variable citdl="array()" line="1120" name="arr" /></scope><scope doc="&#xA;&lt;optional|required&gt; optional,  - required&#xA;&lt;string&gt; extension  - name&#xA;&lt;string&gt; minimum  - version&#xA;&lt;string&gt; maximum  - version&#xA;&lt;string&gt; recommended  - version&#xA;&lt;array&gt; incompatible  - versions&#xA;" ilk="function" line="1143" lineend="1160" name="addExtensionDep" signature="addExtensionDep($type, $name, $min = false, $max = false, $recommended = false, $exclude = false)"><variable ilk="argument" line="1143" name="type" /><variable ilk="argument" line="1143" name="name" /><variable default="false" ilk="argument" line="1143" name="min" /><variable default="false" ilk="argument" line="1143" name="max" /><variable default="false" ilk="argument" line="1143" name="recommended" /><variable default="false" ilk="argument" line="1143" name="exclude" /><variable citdl="this._constructDep()" line="1151" name="dep" /><variable citdl="array()" line="1147" name="arr" /></scope><scope doc="&#xA;&lt;string&gt; Operating  - system name&#xA;&lt;boolean&gt; true  - if this package cannot be installed on this OS&#xA;" ilk="function" line="1166" lineend="1181" name="addOsDep" signature="addOsDep($name, $conflicts = false)"><variable ilk="argument" line="1166" name="name" /><variable default="false" ilk="argument" line="1166" name="conflicts" /><variable citdl="array()" line="1169" name="dep" /></scope><scope doc="&#xA;&lt;string&gt; Architecture  - matching pattern&#xA;&lt;boolean&gt; true  - if this package cannot be installed on this architecture&#xA;" ilk="function" line="1187" lineend="1202" name="addArchDep" signature="addArchDep($pattern, $conflicts = false)"><variable ilk="argument" line="1187" name="pattern" /><variable default="false" ilk="argument" line="1187" name="conflicts" /><variable citdl="array()" line="1190" name="dep" /></scope><scope doc="Set the kind of package, and erase all release tags&#xA;&#xA;- a php package is a PEAR-style package&#xA;- an extbin package is a PECL-style extension binary&#xA;- an extsrc package is a PECL-style source for a binary&#xA;- an zendextbin package is a PECL-style zend extension binary&#xA;- an zendextsrc package is a PECL-style source for a zend extension binary&#xA;- a bundle package is a collection of other pre-packaged packages&#xA;@param php|extbin|extsrc|zendextsrc|zendextbin|bundle&#xA;@return bool success" ilk="function" line="1216" lineend="1245" name="setPackageType" returns="bool" signature="bool setPackageType($type)"><variable ilk="argument" line="1216" name="type" /><variable citdl="array()[]" line="1232" name="test" /></scope><scope doc="&#xA;Returns bool  - true if package type is set up&#xA;" ilk="function" line="1250" lineend="1261" name="addRelease" returns="bool" signature="bool addRelease()" /><scope doc="&#xA;Get the current release tag in order to add to it&#xA;&lt;bool&gt; returns  - only releases that have installcondition if true&#xA;Returns array|null &#xA;" ilk="function" line="1268" lineend="1289" name="_getCurrentRelease" returns="array" signature="array &amp;_getCurrentRelease($strict = true)"><variable default="true" ilk="argument" line="1268" name="strict" /><variable line="1273" name="a" /></scope><scope doc="&#xA;Add a file to the current release that should be installed under a different name&#xA;&lt;string&gt; &lt;contents&gt;  - path to file&#xA;&lt;string&gt; name  - the file should be installed as&#xA;" ilk="function" line="1296" lineend="1308" name="addInstallAs" returns="boolean" signature="addInstallAs($path, $as)"><variable ilk="argument" line="1296" name="path" /><variable ilk="argument" line="1296" name="as" /><variable citdl="this._getCurrentRelease()" line="1298" name="r" /></scope><scope doc="&#xA;Add a file to the current release that should be ignored&#xA;&lt;string&gt; &lt;contents&gt;  - path to file&#xA;Returns bool  - success of operation&#xA;" ilk="function" line="1315" lineend="1327" name="addIgnore" returns="bool" signature="bool addIgnore($path)"><variable ilk="argument" line="1315" name="path" /><variable citdl="this._getCurrentRelease()" line="1317" name="r" /></scope><scope doc="Add an extension binary package for this extension source code release&#xA;&#xA;Note that the package must be from the same channel as the extension source package&#xA;@param string" ilk="function" line="1335" lineend="1349" name="addBinarypackage" returns="boolean" signature="addBinarypackage($package)"><variable ilk="argument" line="1335" name="package" /><variable citdl="this._getCurrentRelease()" line="1340" name="r" /></scope><scope doc="Add a configureoption to an extension source package&#xA;@param string&#xA;@param string&#xA;@param string" ilk="function" line="1357" lineend="1378" name="addConfigureOption" returns="boolean" signature="addConfigureOption($name, $prompt, $default = null)"><variable ilk="argument" line="1357" name="name" /><variable ilk="argument" line="1357" name="prompt" /><variable default="null" ilk="argument" line="1357" name="default" /><variable citdl="array()" line="1368" name="opt" /><variable citdl="this._getCurrentRelease()" line="1363" name="r" /></scope><scope doc="&#xA;Set an installation condition based on php version for the current release set&#xA;&lt;string&gt; minimum  - version&#xA;&lt;string&gt; maximum  - version&#xA;&lt;false|array&gt; incompatible  - versions of PHP&#xA;" ilk="function" line="1386" lineend="1417" name="setPhpInstallCondition" returns="boolean" signature="setPhpInstallCondition($min, $max, $exclude = false)"><variable ilk="argument" line="1386" name="min" /><variable ilk="argument" line="1386" name="max" /><variable default="false" ilk="argument" line="1386" name="exclude" /><variable citdl="array()" line="1396" name="dep" /><variable citdl="this._mergeTag()" line="1388" name="r" /></scope><scope doc="&#xA;&lt;optional|required&gt; optional,  - required&#xA;&lt;string&gt; extension  - name&#xA;&lt;string&gt; minimum  - version&#xA;&lt;string&gt; maximum  - version&#xA;&lt;string&gt; recommended  - version&#xA;&lt;array&gt; incompatible  - versions&#xA;" ilk="function" line="1427" lineend="1450" name="addExtensionInstallCondition" returns="boolean" signature="addExtensionInstallCondition($name, $min = false, $max = false, $recommended = false, $exclude = false)"><variable ilk="argument" line="1427" name="name" /><variable default="false" ilk="argument" line="1427" name="min" /><variable default="false" ilk="argument" line="1427" name="max" /><variable default="false" ilk="argument" line="1427" name="recommended" /><variable default="false" ilk="argument" line="1427" name="exclude" /><variable citdl="this._constructDep()" line="1435" name="dep" /><variable citdl="this._mergeTag()" line="1430" name="r" /></scope><scope doc="&#xA;Set an installation condition based on operating system for the current release set&#xA;&lt;string&gt; OS  - name&#xA;&lt;bool&gt; whether  - this OS is incompatible with the current release&#xA;" ilk="function" line="1457" lineend="1485" name="setOsInstallCondition" returns="boolean" signature="setOsInstallCondition($name, $conflicts = false)"><variable ilk="argument" line="1457" name="name" /><variable default="false" ilk="argument" line="1457" name="conflicts" /><variable citdl="array()" line="1467" name="dep" /><variable citdl="this._mergeTag()" line="1459" name="r" /></scope><scope doc="&#xA;Set an installation condition based on architecture for the current release set&#xA;&lt;string&gt; architecture  - pattern&#xA;&lt;bool&gt; whether  - this arch is incompatible with the current release&#xA;" ilk="function" line="1492" lineend="1520" name="setArchInstallCondition" returns="boolean" signature="setArchInstallCondition($pattern, $conflicts = false)"><variable ilk="argument" line="1492" name="pattern" /><variable default="false" ilk="argument" line="1492" name="conflicts" /><variable citdl="array()" line="1502" name="dep" /><variable citdl="this._mergeTag()" line="1494" name="r" /></scope><scope doc="&#xA;For extension binary releases, this is used to specify either the&#xA;static URI to a source package, or the package name and channel of the extsrc/zendextsrc&#xA;package it is based on.&#xA;&lt;string&gt; Package  - name, or full URI to source package (extsrc/zendextsrc type)&#xA;" ilk="function" line="1528" lineend="1541" name="setSourcePackage" signature="setSourcePackage($packageOrUri)"><variable ilk="argument" line="1528" name="packageOrUri" /></scope><scope doc="Generate a valid change log entry from the current package.xml&#xA;@param string|false" ilk="function" line="1547" lineend="1561" name="generateChangeLogEntry" returns="array()" signature="generateChangeLogEntry($notes = false)"><variable default="false" ilk="argument" line="1547" name="notes" /></scope><scope doc="&#xA;&lt;string&gt; release  - version to set change log notes for&#xA;&lt;array&gt; output  - of {@link generateChangeLogEntry()}&#xA;" ilk="function" line="1567" lineend="1594" name="setChangelogEntry" returns="this._packageInfo" signature="setChangelogEntry($releaseversion, $contents)"><variable ilk="argument" line="1567" name="releaseversion" /><variable ilk="argument" line="1567" name="contents" /><variable line="1583" name="index" /><variable citdl="index" line="1586" name="curlog" /><variable citdl="this._packageInfo[]" line="1583" name="changelog" /></scope><scope doc="&#xA;Remove the changelog entirely&#xA;" ilk="function" line="1599" lineend="1602" name="clearChangeLog" signature="clearChangeLog()" /></scope></scope>
<scope ilk="blob" lang="PHP" name="Graph.php" src="/usr/share/pear/Structures/Graph.php"><import line="33" module="PEAR.php" /><import line="34" module="Structures/Graph/Node.php" /><variable citdl="int" ilk="constant" line="37" name="STRUCTURES_GRAPH_ERROR_GENERIC" /><scope doc="}}}" ilk="class" line="53" lineend="175" name="Structures_Graph"><variable citdl="array()" line="59" name="_nodes" /><variable citdl="boolean" line="65" name="_directed" /><scope attributes="public __ctor__" doc="&#xA;Constructor&#xA;&lt;boolean&gt; $directed  - Set to true if the graph is directed.&#xA;                         Set to false if it is not directed.&#xA;" ilk="function" line="74" lineend="77" name="__construct" signature="__construct(boolean $directed = true)"><variable citdl="boolean" default="true" ilk="argument" line="74" name="directed" /></scope><scope attributes="public __ctor__" doc="&#xA;Old constructor (PHP4-style; kept for BC with extending classes)&#xA;&lt;boolean&gt; $directed  - Set to true if the graph is directed.&#xA;                         Set to false if it is not directed.&#xA;Returns void &#xA;" ilk="function" line="87" lineend="90" name="Structures_Graph" signature="void Structures_Graph(boolean $directed = true)"><variable citdl="boolean" default="true" ilk="argument" line="87" name="directed" /></scope><scope attributes="public" doc="&#xA;Return true if a graph is directed&#xA;Returns boolean  - true if the graph is directed&#xA;" ilk="function" line="97" lineend="100" name="isDirected" returns="boolean" signature="boolean isDirected()" /><scope attributes="public" doc="&#xA;Add a Node to the Graph&#xA;&lt;structures_graph_node&gt; $newNode  - The node to be added.&#xA;Returns void &#xA;" ilk="function" line="109" lineend="150" name="addNode" signature="void addNode(Structures_Graph_Node &amp; $newNode)"><variable citdl="Structures_Graph_Node" ilk="argument" line="109" name="newNode" /><variable citdl="this._nodes[]" line="122" name="node" /><variable citdl="this._nodes" line="130" name="savedData" /><variable line="122" name="key" /><variable citdl="boolean" line="131" name="referenceIsEqualFlag" /></scope><scope attributes="public" doc="&#xA;Remove a Node from the Graph&#xA;&lt;structures_graph_node&gt; $node  - The node to be removed from the graph&#xA;Returns void &#xA;Todo   This is unimplemented&#xA;" ilk="function" line="160" lineend="162" name="removeNode" signature="void removeNode(Structures_Graph_Node &amp; $node)"><variable citdl="Structures_Graph_Node" ilk="argument" line="160" name="node" /></scope><scope attributes="public" doc="&#xA;Return the node set, in no particular order.&#xA;For ordered node sets, use a Graph Manipulator insted.&#xA;Returns array  - The set of nodes in this graph&#xA;See    Structures_Graph_Manipulator_TopologicalSorter&#xA;" ilk="function" line="171" lineend="174" name="getNodes" returns="array" signature="array &amp;getNodes()" /></scope></scope>
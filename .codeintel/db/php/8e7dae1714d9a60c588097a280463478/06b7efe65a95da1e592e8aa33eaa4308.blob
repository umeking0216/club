<scope ilk="blob" lang="PHP" name="Validate.php" src="/usr/share/pear/PEAR/Validate.php"><import line="24" module="PEAR/Common.php" /><import line="25" module="PEAR/Validator/PECL.php" /><variable citdl="int" ilk="constant" line="18" name="PEAR_VALIDATE_INSTALLING" /><variable citdl="int" ilk="constant" line="19" name="PEAR_VALIDATE_UNINSTALLING" /><variable citdl="int" ilk="constant" line="20" name="PEAR_VALIDATE_NORMAL" /><variable citdl="int" ilk="constant" line="21" name="PEAR_VALIDATE_DOWNLOADING" /><variable citdl="int" ilk="constant" line="22" name="PEAR_VALIDATE_PACKAGING" /><scope doc="Validation class for package.xml - channel-level advanced validation&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="38" lineend="625" name="PEAR_Validate"><variable citdl="_PEAR_COMMON_PACKAGE_NAME_PREG" line="40" name="packageregex" /><variable citdl="PEAR_PackageFile_v1" doc="@var PEAR_PackageFile_v1|PEAR_PackageFile_v2" line="44" name="_packagexml" /><variable citdl="int" doc="@var int one of the PEAR_VALIDATE_* constants" line="48" name="_state" /><variable citdl="array" doc="Format: (&apos;error&apos; =&gt; array(&apos;field&apos; =&gt; name, &apos;reason&apos; =&gt; reason), &apos;warning&apos; =&gt; same)&#xA;@var array&#xA;@access private" line="54" name="_failures" /><scope doc="Override this method to handle validation of normal package names&#xA;@param string&#xA;@return bool&#xA;@access protected" ilk="function" line="62" lineend="65" name="_validPackageName" returns="bool" signature="bool _validPackageName($name)"><variable ilk="argument" line="62" name="name" /></scope><scope doc="&#xA;&lt;string&gt; package  - name to validate&#xA;&lt;string&gt; name  - of channel-specific validation package&#xA;Final&#xA;" ilk="function" line="72" lineend="80" name="validPackageName" returns="boolean" signature="validPackageName($name, $validatepackagename = false)"><variable ilk="argument" line="72" name="name" /><variable default="false" ilk="argument" line="72" name="validatepackagename" /></scope><scope attributes="public static" doc="This validates a bundle name, and bundle names must conform&#xA;to the PEAR naming convention, so the method is final and static.&#xA;@param string&#xA;@final" ilk="function" line="88" lineend="91" name="validGroupName" returns="boolean" signature="validGroupName($name)"><variable ilk="argument" line="88" name="name" /></scope><scope attributes="public static" doc="Determine whether $state represents a valid stability level&#xA;@param string&#xA;@return bool&#xA;@final" ilk="function" line="99" lineend="102" name="validState" returns="bool" signature="bool validState($state)"><variable ilk="argument" line="99" name="state" /></scope><scope attributes="public static" doc="&#xA;Get a list of valid stability levels&#xA;Returns array &#xA;Final&#xA;" ilk="function" line="109" lineend="112" name="getValidStates" returns="array" signature="array getValidStates()" /><scope attributes="public static" doc="Determine whether a version is a properly formatted version number that can be used&#xA;by version_compare&#xA;@param string&#xA;@return bool&#xA;@final" ilk="function" line="121" lineend="124" name="validVersion" returns="bool" signature="bool validVersion($ver)"><variable ilk="argument" line="121" name="ver" /></scope><scope doc="@param PEAR_PackageFile_v1|PEAR_PackageFile_v2" ilk="function" line="129" lineend="132" name="setPackageFile" signature="setPackageFile(&amp; $pf)"><variable ilk="argument" line="129" name="pf" /></scope><scope doc="&#xA;Access private&#xA;" ilk="function" line="137" lineend="140" name="_addFailure" signature="_addFailure($field, $reason)"><variable ilk="argument" line="137" name="field" /><variable ilk="argument" line="137" name="reason" /></scope><scope doc="&#xA;Access private&#xA;" ilk="function" line="145" lineend="148" name="_addWarning" signature="_addWarning($field, $reason)"><variable ilk="argument" line="145" name="field" /><variable ilk="argument" line="145" name="reason" /></scope><scope ilk="function" line="150" lineend="155" name="getFailures" returns="failures" signature="getFailures()"><variable citdl="this._failures" line="152" name="failures" /></scope><scope doc="&#xA;&lt;int&gt; one  - of the PEAR_VALIDATE_* constants&#xA;" ilk="function" line="160" lineend="191" name="validate" returns="boolean" signature="validate($state = null)"><variable default="null" ilk="argument" line="160" name="state" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="196" lineend="236" name="validatePackageName" returns="boolean" signature="validatePackageName()"><variable citdl="explode()" line="205" name="a" /><variable citdl="this._packagexml.getPackage()" line="204" name="name" /><variable citdl="strlen()" line="210" name="vlen" /><variable citdl="substr()" line="211" name="majver" /><variable citdl="this._packagexml.getVersion()" line="203" name="version" /><variable citdl="array_shift()" line="206" name="test" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="241" lineend="421" name="validateVersion" returns="boolean" signature="validateVersion()"><variable citdl="explode()" line="251" name="versioncomponents" /><variable citdl="substr()" line="330" name="majver" /><variable citdl="this._packagexml.getVersion()" line="250" name="version" /><variable citdl="this._packagexml.getPackage()" line="257" name="name" /><variable citdl="strlen()" line="329" name="vlen" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="426" lineend="431" name="validateMaintainers" returns="boolean" signature="validateMaintainers()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="436" lineend="458" name="validateDate" returns="boolean" signature="validateDate()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="463" lineend="488" name="validateTime" returns="boolean" signature="validateTime()"><variable citdl="preg_match()" line="479" name="result" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="493" lineend="507" name="validateState" returns="boolean" signature="validateState()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="512" lineend="532" name="validateStability" returns="ret" signature="validateStability()"><variable citdl="this._packagexml.getState()" line="515" name="packagestability" /><variable citdl="this._packagexml.getState()" line="516" name="apistability" /><variable citdl="boolean" line="514" name="ret" /><variable citdl="PEAR_Validate.getValidStates()" line="523" name="apistates" /></scope><scope doc="&#xA;Access protected&#xA;" ilk="function" line="537" lineend="540" name="validateSummary" returns="boolean" signature="validateSummary()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="545" lineend="548" name="validateDescription" returns="boolean" signature="validateDescription()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="553" lineend="556" name="validateLicense" returns="boolean" signature="validateLicense()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="561" lineend="564" name="validateNotes" returns="boolean" signature="validateNotes()" /><scope doc="&#xA;for package.xml 2.0 only - channels can&apos;t use package.xml 1.0&#xA;Access protected&#xA;" ilk="function" line="570" lineend="573" name="validateDependencies" returns="boolean" signature="validateDependencies()" /><scope doc="&#xA;for package.xml 1.0 only&#xA;Access private&#xA;" ilk="function" line="579" lineend="582" name="_validateFilelist" returns="boolean" signature="_validateFilelist()" /><scope doc="&#xA;for package.xml 2.0 only&#xA;Access protected&#xA;" ilk="function" line="588" lineend="591" name="validateMainFilelist" returns="boolean" signature="validateMainFilelist()" /><scope doc="&#xA;for package.xml 2.0 only&#xA;Access protected&#xA;" ilk="function" line="597" lineend="600" name="validateReleaseFilelist" returns="boolean" signature="validateReleaseFilelist()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="605" lineend="608" name="validateChangelog" returns="boolean" signature="validateChangelog()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="613" lineend="616" name="validateFilelist" returns="boolean" signature="validateFilelist()" /><scope doc="&#xA;Access protected&#xA;" ilk="function" line="621" lineend="624" name="validateDeps" returns="boolean" signature="validateDeps()" /></scope></scope>
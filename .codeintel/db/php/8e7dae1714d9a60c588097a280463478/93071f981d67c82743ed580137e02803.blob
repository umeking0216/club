<scope ilk="blob" lang="PHP" name="Dependency2.php" src="/usr/share/pear/PEAR/Dependency2.php"><import line="19" module="PEAR/Validate.php" /><import line="89" module="PEAR/DependencyDB.php" /><import line="106" module="OS/Guess.php" /><import line="894" module="PEAR/Downloader/Package.php" /><import line="1174" module="PEAR/Downloader/Package.php" /><scope doc="Dependency check for PEAR packages&#xA;&#xA;This class handles both version 1.0 and 2.0 dependencies&#xA;WARNING: *any* changes to this class must be duplicated in the&#xA;test_PEAR_Dependency2 class found in tests/PEAR_Dependency2/setup.php.inc,&#xA;or unit tests will not actually validate the changes&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="37" lineend="1357" name="PEAR_Dependency2"><variable citdl="integer" doc="One of the PEAR_VALIDATE_* states&#xA;@see PEAR_VALIDATE_NORMAL&#xA;@var integer" line="44" name="_state" /><variable citdl="installoptions" line="50" name="_options" /><variable citdl="OS_Guess" doc="@var OS_Guess" line="55" name="_os" /><variable citdl="PEAR_Registry" doc="@var PEAR_Registry" line="60" name="_registry" /><variable citdl="PEAR_Config" doc="@var PEAR_Config" line="65" name="_config" /><variable citdl="PEAR_DependencyDB" doc="@var PEAR_DependencyDB" line="70" name="_dependencydb" /><variable citdl="array" doc="Output of PEAR_Registry::parsedPackageName()&#xA;@var array" line="76" name="_currentPackage" /><scope attributes="__ctor__" doc="@param PEAR_Config&#xA;@param array installation options&#xA;@param array format of PEAR_Registry::parsedPackageName()&#xA;@param int installation state (one of PEAR_VALIDATE_*)" ilk="function" line="84" lineend="111" name="__construct" signature="__construct(&amp; $config, $installoptions, $package, $state = PEAR_VALIDATE_INSTALLING)"><variable ilk="argument" line="84" name="config" /><variable ilk="argument" line="84" name="installoptions" /><variable ilk="argument" line="84" name="package" /><variable default="PEAR_VALIDATE_INSTALLING" ilk="argument" line="84" name="state" /></scope><scope attributes="static" ilk="function" line="113" lineend="159" name="_getExtraString" returns="string" signature="_getExtraString($dep)"><variable ilk="argument" line="113" name="dep" /><variable line="144" name="i" /><variable citdl="dep[]" line="144" name="exclude" /><variable citdl="string" line="115" name="extra" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="164" lineend="167" name="getPHP_OS" signature="getPHP_OS()" /><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="172" lineend="175" name="getsysname" returns="this._os.getSysname()" signature="getsysname()" /><scope doc="&#xA;Specify a dependency on an OS.  Use arch for detailed os/processor information&#xA;There are two generic OS dependencies that will be the most common, unix and windows.&#xA;Other options are linux, freebsd, darwin (OS X), sunos, irix, hpux, aix&#xA;" ilk="function" line="183" lineend="261" name="validateOsDependency" returns="boolean" signature="validateOsDependency($dep)"><variable ilk="argument" line="183" name="dep" /><variable line="193" name="not" /><variable citdl="array()" line="215" name="unices" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="266" lineend="269" name="matchSignature" returns="this._os.matchSignature()" signature="matchSignature($pattern)"><variable ilk="argument" line="266" name="pattern" /></scope><scope doc="&#xA;Specify a complex dependency on an OS/processor/kernel version,&#xA;Use OS for simple operating system dependency.&#xA;This is the only dependency that accepts an eregable pattern.  The pattern&#xA;will be matched against the php_uname() output parsed by OS_Guess&#xA;" ilk="function" line="278" lineend="310" name="validateArchDependency" returns="boolean" signature="validateArchDependency($dep)"><variable ilk="argument" line="278" name="dep" /><variable line="284" name="not" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="315" lineend="318" name="extension_loaded" returns="extension_loaded()" signature="extension_loaded($name)"><variable ilk="argument" line="315" name="name" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="323" lineend="330" name="phpversion" returns="phpversion()" signature="phpversion($name = null)"><variable default="null" ilk="argument" line="323" name="name" /></scope><scope ilk="function" line="332" lineend="479" name="validateExtensionDependency" returns="boolean" signature="validateExtensionDependency($dep, $required = true)"><variable ilk="argument" line="332" name="dep" /><variable default="true" ilk="argument" line="332" name="required" /><variable citdl="boolean" line="406" name="fail" /><variable citdl="this.extension_loaded()" line="339" name="loaded" /><variable citdl="string" line="401" name="version" /><variable citdl="dep[]" line="434" name="exclude" /><variable citdl="self._getExtraString()" line="340" name="extra" /></scope><scope ilk="function" line="481" lineend="536" name="validatePhpDependency" returns="boolean" signature="validatePhpDependency($dep)"><variable ilk="argument" line="481" name="dep" /><variable citdl="dep[]" line="521" name="exclude" /><variable citdl="this.phpversion()" line="488" name="version" /><variable citdl="self._getExtraString()" line="489" name="extra" /></scope><scope doc="&#xA;This makes unit-testing a heck of a lot easier&#xA;" ilk="function" line="541" lineend="544" name="getPEARVersion" returns="string" signature="getPEARVersion()" /><scope ilk="function" line="546" lineend="597" name="validatePearinstallerDependency" returns="this.raiseError()" signature="validatePearinstallerDependency($dep)"><variable ilk="argument" line="546" name="dep" /><variable citdl="dep[]" line="583" name="exclude" /><variable citdl="self._getExtraString()" line="549" name="extra" /><variable citdl="this.getPEARVersion()" line="548" name="pearversion" /></scope><scope ilk="function" line="599" lineend="602" name="validateSubpackageDependency" returns="this.validatePackageDependency()" signature="validateSubpackageDependency($dep, $required, $params)"><variable ilk="argument" line="599" name="dep" /><variable ilk="argument" line="599" name="required" /><variable ilk="argument" line="599" name="params" /></scope><scope doc="&#xA;&lt;array&gt; dependency  - information (2.0 format)&#xA;&lt;boolean&gt; whether  - this is a required dependency&#xA;&lt;array&gt; a  - list of downloaded packages to be installed, if any&#xA;&lt;boolean&gt; if  - true, then deps on pear.php.net that fail will also check&#xA;               against pecl.php.net packages to accommodate extensions that have&#xA;               moved to pecl.php.net from pear.php.net&#xA;" ilk="function" line="612" lineend="640" name="validatePackageDependency" returns="boolean" signature="validatePackageDependency($dep, $required, $params, $depv1 = false)"><variable ilk="argument" line="612" name="dep" /><variable ilk="argument" line="612" name="required" /><variable ilk="argument" line="612" name="params" /><variable default="false" ilk="argument" line="612" name="depv1" /><variable citdl="dep" line="621" name="save" /><variable citdl="this.validateExtensionDependency()" line="625" name="ret" /><variable citdl="dep" line="622" name="subdep" /></scope><scope ilk="function" line="642" lineend="869" name="_validatePackageDownload" returns="this.raiseError()" signature="_validatePackageDownload($dep, $required, $params, $depv1 = false)"><variable ilk="argument" line="642" name="dep" /><variable ilk="argument" line="642" name="required" /><variable ilk="argument" line="642" name="params" /><variable default="false" ilk="argument" line="642" name="depv1" /><variable citdl="dep[]" line="794" name="exclude" /><variable citdl="params[]" line="834" name="parent" /><variable citdl="self._getExtraString()" line="703" name="extra" /><variable citdl="params[]" line="651" name="param" /><variable citdl="installed" line="680" name="installed" /><variable citdl="boolean" line="681" name="downloaded" /><variable citdl="this._registry.packageinfo()" line="679" name="version" /><variable citdl="string" line="714" name="rest" /><variable citdl="boolean" line="650" name="found" /><variable citdl="boolean" line="760" name="fail" /><variable citdl="this._registry.parsedPackageNameToString()" line="649" name="depname" /></scope><scope ilk="function" line="871" lineend="874" name="_validatePackageInstall" returns="this._validatePackageDownload()" signature="_validatePackageInstall($dep, $required, $depv1 = false)"><variable ilk="argument" line="871" name="dep" /><variable ilk="argument" line="871" name="required" /><variable default="false" ilk="argument" line="871" name="depv1" /></scope><scope doc="&#xA;Verify that uninstalling packages passed in to command line is OK.&#xA;&lt;pear_installer&gt; $dl  - &#xA;Returns pear_error|true &#xA;" ilk="function" line="882" lineend="1091" name="validatePackageUninstall" returns="PEAR_Error" signature="pear_error validatePackageUninstall(PEAR_Installer &amp; $dl)"><variable citdl="PEAR_Installer" ilk="argument" line="882" name="dl" /><variable citdl="badpackages[]" line="907" name="warning" /><variable citdl="this._dependencydb.getDependencies()" line="946" name="pardeps" /><variable citdl="strtolower()" line="903" name="memyselfandI" /><variable citdl="boolean" line="1000" name="fail" /><variable citdl="allparents[]" line="972" name="d1" /><variable citdl="dl.___uninstall_package_cache" line="905" name="badpackages" /><variable citdl="params[]" line="937" name="param" /><variable citdl="this._registry.getPackage()" line="1037" name="pa" /><variable citdl="array()" line="888" name="params" /><variable citdl="this._validatePackageUninstall()" line="1048" name="test" /><variable citdl="downloaded[]" line="892" name="pf" /><variable line="1006" name="kid" /><variable citdl="d1[]" line="1007" name="depinfo" /><variable citdl="packagedeps[]" line="972" name="parent" /><variable citdl="this._registry.parsePackageName()" line="1035" name="packagename" /><variable citdl="array()" line="935" name="perpackagelist" /><variable citdl="remove[]" line="1001" name="unused" /><variable citdl="dl.getUninstallPackages()" line="891" name="downloaded" /><variable citdl="array()" line="936" name="allparents" /><variable citdl="perpackagelist[]" line="1029" name="packagedeps" /><variable citdl="PEAR_Downloader_Package" line="896" name="dp" /><variable citdl="array()" line="998" name="badchildren" /><variable citdl="array()" line="941" name="a" /><variable citdl="this._currentPackage" line="1028" name="save" /><variable citdl="d1[]" line="945" name="d" /><variable line="1001" name="package" /><variable citdl="pardeps[]" line="947" name="dep" /><variable citdl="array()" line="971" name="remove" /><variable line="892" name="i" /><variable citdl="this._dependencydb.getDependentPackages()" line="943" name="deps" /><variable citdl="badpackages[]" line="913" name="error" /></scope><scope ilk="function" line="1093" lineend="1148" name="_validatePackageUninstall" returns="boolean" signature="_validatePackageUninstall($dep, $required, $dl)"><variable ilk="argument" line="1093" name="dep" /><variable ilk="argument" line="1093" name="required" /><variable ilk="argument" line="1093" name="dl" /><variable citdl="boolean" line="1125" name="fail" /><variable citdl="this._registry.parsedPackageNameToString()" line="1095" name="depname" /><variable citdl="this._registry.packageinfo()" line="1096" name="version" /><variable citdl="required" line="1135" name="saverequired" /><variable citdl="self._getExtraString()" line="1101" name="extra" /></scope><scope doc="validate a downloaded package against installed packages&#xA;&#xA;As of PEAR 1.4.3, this will only validate&#xA;&#xA;@param array|PEAR_Downloader_Package|PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;             $pkg package identifier (either&#xA;                  array(&apos;package&apos; =&gt; blah, &apos;channel&apos; =&gt; blah) or an array with&#xA;                  index &apos;info&apos; referencing an object)&#xA;@param PEAR_Downloader $dl&#xA;@param array $params full list of packages to install&#xA;@return true|PEAR_Error" ilk="function" line="1163" lineend="1224" name="validatePackage" returns="true" signature="true validatePackage($pkg, PEAR_Downloader &amp; $dl, array $params = array())"><variable ilk="argument" line="1163" name="pkg" /><variable citdl="PEAR_Downloader" ilk="argument" line="1163" name="dl" /><variable citdl="array" default="array()" ilk="argument" line="1163" name="params" /><variable citdl="deps[]" line="1185" name="info" /><variable citdl="ds[]" line="1200" name="d" /><variable line="1186" name="package" /><variable citdl="d" line="1203" name="dep" /><variable citdl="d" line="1204" name="required" /><variable citdl="checker._validatePackageDownload()" line="1205" name="ret" /><variable citdl="params[]" line="1187" name="packd" /><variable citdl="PEAR_Dependency2" line="1202" name="checker" /><variable line="1185" name="channel" /><variable citdl="this._dependencydb.getDependentPackageDependencies()" line="1166" name="deps" /><variable citdl="boolean" line="1171" name="fail" /><variable citdl="info[]" line="1186" name="ds" /><variable citdl="PEAR_Downloader_Package" line="1177" name="dp" /></scope><scope doc="&#xA;validate a package.xml 1.0 dependency&#xA;" ilk="function" line="1229" lineend="1244" name="validateDependency1" returns="this.raiseError()" signature="validateDependency1($dep, $params = array())"><variable ilk="argument" line="1229" name="dep" /><variable default="array()" ilk="argument" line="1229" name="params" /><variable attributes="__not_yet_defined__" line="1235" name="type" /><variable attributes="__not_yet_defined__" line="1235" name="newdep" /></scope><scope attributes="static" doc="&#xA;Convert a 1.0 dep into a 2.0 dep&#xA;" ilk="function" line="1249" lineend="1317" name="normalizeDep" returns="array()" signature="normalizeDep($dep)"><variable ilk="argument" line="1249" name="dep" /><variable citdl="types" line="1262" name="type" /><variable citdl="array()" line="1256" name="types" /><variable citdl="array()" line="1264" name="newdep" /></scope><scope attributes="static" doc="&#xA;Converts text comparing operators to them sign equivalents&#xA;Example: &apos;ge&apos; to &apos;&gt;=&apos;&#xA;Access public&#xA;&lt;string&gt; Operator  - &#xA;Returns string  - Sign equivalent&#xA;" ilk="function" line="1328" lineend="1340" name="signOperator" returns="string" signature="string signOperator($operator)"><variable ilk="argument" line="1328" name="operator" /></scope><scope ilk="function" line="1342" lineend="1350" name="raiseError" returns="this.warning()" signature="raiseError($msg)"><variable ilk="argument" line="1342" name="msg" /></scope><scope ilk="function" line="1352" lineend="1356" name="warning" returns="array()" signature="warning($msg)"><variable ilk="argument" line="1352" name="msg" /></scope></scope></scope>
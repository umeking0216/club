<scope ilk="blob" lang="PHP" name="DependencyDB.php" src="/usr/share/pear/PEAR/DependencyDB.php"><import line="20" module="PEAR.php" /><import line="21" module="PEAR/Config.php" /><scope doc="Track dependency relationships between installed packages&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@author     Tomas V.V.Cox &lt;cox@idec.net.com&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="36" lineend="766" name="PEAR_DependencyDB"><variable citdl="PEAR_Config" doc="This is initialized by {@link setConfig()}&#xA;@var PEAR_Config&#xA;@access private" line="45" name="_config" /><variable citdl="PEAR_Registry" doc="This is initialized by {@link setConfig()}&#xA;@var PEAR_Registry&#xA;@access private" line="51" name="_registry" /><variable citdl="string" doc="Filename of the dependency DB (usually .depdb)&#xA;@var string&#xA;@access private" line="57" name="_depdb" /><variable citdl="string" doc="File name of the lockfile (usually .depdblock)&#xA;@var string&#xA;@access private" line="63" name="_lockfile" /><variable citdl="resource" doc="Open file resource for locking the lockfile&#xA;@var resource|false&#xA;@access private" line="69" name="_lockFp" /><variable citdl="string" doc="API version of this class, used to validate a file on-disk&#xA;@var string&#xA;@access private" line="75" name="_version" /><variable citdl="array" doc="Cached dependency database file&#xA;@var array|null&#xA;@access private" line="81" name="_cache" /><scope attributes="public static" doc="Get a raw dependency database.  Calls setConfig() and assertDepsDB()&#xA;@param PEAR_Config&#xA;@param string|false full path to the dependency database, or false to use default&#xA;@return PEAR_DependencyDB|PEAR_Error" ilk="function" line="92" lineend="106" name="singleton" returns="PEAR_DependencyDB" signature="pear_dependencydb &amp;singleton(&amp; $config, $depdb = false)"><variable ilk="argument" line="92" name="config" /><variable default="false" ilk="argument" line="92" name="depdb" /><variable citdl="PEAR_DependencyDB" line="96" name="a" /><variable citdl="config.get()" line="94" name="phpdir" /><variable citdl="a.assertDepsDB()" line="99" name="e" /></scope><scope doc="Set up the registry/location of dependency DB&#xA;@param PEAR_Config|false&#xA;@param string|false full path to the dependency database, or false to use default" ilk="function" line="113" lineend="133" name="setConfig" signature="setConfig(&amp; $config, $depdb = false)"><variable ilk="argument" line="113" name="config" /><variable default="false" ilk="argument" line="113" name="depdb" /><variable citdl="this._config.get()" line="123" name="dir" /></scope><scope doc="&#xA;}}}&#xA;" ilk="function" line="136" lineend="155" name="hasWriteAccess" returns="boolean" signature="hasWriteAccess()"><variable citdl="this._depdb" line="139" name="dir" /></scope><scope doc="&#xA;Create the dependency database, if it doesn&apos;t exist.  Error if the database is&#xA;newer than the code reading it.&#xA;Returns void|pear_error &#xA;" ilk="function" line="164" lineend="182" name="assertDepsDB" signature="void assertDepsDB()"><variable citdl="this._getDepDB()" line="171" name="depdb" /></scope><scope doc="Get a list of installed packages that depend on this package&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="189" lineend="205" name="getDependentPackages" returns="array" signature="array getDependentPackages(&amp; $pkg)"><variable ilk="argument" line="189" name="pkg" /><variable citdl="this._getDepDB()" line="191" name="data" /><variable citdl="strtolower()" line="193" name="channel" /><variable citdl="strtolower()" line="194" name="package" /></scope><scope doc="Get a list of the actual dependencies of installed packages that depend on&#xA;a package.&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="213" lineend="253" name="getDependentPackageDependencies" returns="array" signature="array getDependentPackageDependencies(&amp; $pkg)"><variable ilk="argument" line="213" name="pkg" /><variable citdl="depend[]" line="232" name="info" /><variable citdl="this.getDependentPackages()" line="226" name="depend" /><variable citdl="this.getDependencies()" line="233" name="temp" /><variable citdl="strtolower()" line="218" name="package" /><variable citdl="temp[]" line="234" name="dep" /><variable citdl="array()" line="231" name="dependencies" /><variable citdl="this._getDepDB()" line="215" name="data" /><variable citdl="strtolower()" line="217" name="channel" /></scope><scope doc="Get a list of dependencies of this installed package&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2|array&#xA;@return array|false" ilk="function" line="260" lineend="276" name="getDependencies" returns="array" signature="array getDependencies(&amp; $pkg)"><variable ilk="argument" line="260" name="pkg" /><variable citdl="this._getDepDB()" line="270" name="data" /><variable citdl="strtolower()" line="263" name="channel" /><variable citdl="strtolower()" line="264" name="package" /></scope><scope doc="Determine whether $parent depends on $child, near or deep&#xA;@param array|PEAR_PackageFile_v2|PEAR_PackageFile_v2&#xA;@param array|PEAR_PackageFile_v2|PEAR_PackageFile_v2" ilk="function" line="283" lineend="288" name="dependsOn" returns="this._dependsOn()" signature="dependsOn($parent, $child)"><variable ilk="argument" line="283" name="parent" /><variable ilk="argument" line="283" name="child" /><variable citdl="array()" line="285" name="c" /></scope><scope ilk="function" line="290" lineend="354" name="_dependsOn" returns="boolean" signature="_dependsOn($parent, $child, &amp; $checked)"><variable ilk="argument" line="290" name="parent" /><variable ilk="argument" line="290" name="child" /><variable ilk="argument" line="290" name="checked" /><variable citdl="this._cache[]" line="317" name="info" /><variable citdl="strtolower()" line="301" name="depchannel" /><variable citdl="strtolower()" line="302" name="deppackage" /><variable citdl="strtolower()" line="293" name="channel" /><variable citdl="strtolower()" line="294" name="package" /></scope><scope doc="Register dependencies of a package that is being installed or upgraded&#xA;@param PEAR_PackageFile_v2|PEAR_PackageFile_v2" ilk="function" line="360" lineend="366" name="installPackage" signature="installPackage(&amp; $package)"><variable ilk="argument" line="360" name="package" /><variable citdl="this._getDepDB()" line="362" name="data" /></scope><scope doc="&#xA;Remove dependencies of a package that is being uninstalled, or upgraded.&#xA;Upgraded packages first uninstall, then install&#xA;&lt;pear_packagefile_v1|pear_packagefile_v2|array&gt; If  - an array, then it must have&#xA;       indices &apos;channel&apos; and &apos;package&apos;&#xA;" ilk="function" line="375" lineend="432" name="uninstallPackage" returns="boolean" signature="uninstallPackage(&amp; $pkg)"><variable ilk="argument" line="375" name="pkg" /><variable citdl="data[]" line="396" name="info" /><variable line="393" name="depchannel" /><variable citdl="strtolower()" line="381" name="package" /><variable citdl="data[]" line="391" name="dep" /><variable line="396" name="i" /><variable citdl="strtolower()" line="394" name="depname" /><variable citdl="boolean" line="392" name="found" /><variable citdl="this._getDepDB()" line="377" name="data" /><variable citdl="strtolower()" line="380" name="channel" /></scope><scope doc="&#xA;Rebuild the dependency DB by reading registry entries.&#xA;Returns true|pear_error &#xA;" ilk="function" line="438" lineend="468" name="rebuildDB" returns="true" signature="true rebuildDB()"><variable citdl="packages[]" line="451" name="ps" /><variable citdl="ps[]" line="452" name="package" /><variable citdl="array()" line="440" name="depdb" /><variable citdl="this._writeDepDB()" line="461" name="error" /><variable citdl="this._registry.listAllPackages()" line="446" name="packages" /><variable line="451" name="channel" /></scope><scope doc="&#xA;Register usage of the dependency DB to prevent race conditions&#xA;&lt;int&gt; one  - of the LOCK_* constants&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="476" lineend="520" name="_lock" returns="true" signature="true _lock($mode = LOCK_EX)"><variable default="LOCK_EX" ilk="argument" line="476" name="mode" /><variable citdl="string" line="510" name="str" /><variable citdl="string" line="487" name="open_mode" /></scope><scope doc="&#xA;Release usage of dependency DB&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="527" lineend="535" name="_unlock" returns="true" signature="true _unlock()"><variable citdl="this._lock()" line="529" name="ret" /></scope><scope doc="&#xA;Load the dependency database from disk, or return the cache&#xA;Returns array|pear_error &#xA;" ilk="function" line="541" lineend="561" name="_getDepDB" returns="array" signature="array _getDepDB()"><variable citdl="unserialize()" line="558" name="data" /><variable citdl="PEAR.raiseError()" line="552" name="err" /></scope><scope doc="&#xA;Write out the dependency database to disk&#xA;&lt;array&gt; the  - database&#xA;Returns true|pear_error &#xA;Access private&#xA;" ilk="function" line="569" lineend="585" name="_writeDepDB" returns="true" signature="true _writeDepDB(&amp; $deps)"><variable ilk="argument" line="569" name="deps" /></scope><scope doc="Register all dependencies from a package in the dependencies database, in essence&#xA;&quot;installing&quot; the package&apos;s dependency information&#xA;@param array the database&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;@access private" ilk="function" line="594" lineend="700" name="_setPackageDeps" signature="_setPackageDeps(&amp; $data, &amp; $pkg)"><variable ilk="argument" line="594" name="data" /><variable ilk="argument" line="594" name="pkg" /><variable citdl="deps[]" line="669" name="group" /><variable citdl="strtolower()" line="617" name="package" /><variable citdl="deps[]" line="629" name="dep" /><variable citdl="gen.dependenciesToV2()" line="599" name="deps" /><variable citdl="pkg.getDefaultGenerator()" line="598" name="gen" /><variable citdl="strtolower()" line="616" name="channel" /></scope><scope doc="@param array the database&#xA;@param PEAR_PackageFile_v1|PEAR_PackageFile_v2&#xA;@param array the specific dependency&#xA;@param required|optional whether this is a required or an optional dep&#xA;@param string|false dependency group this dependency is from, or false for ordinary dep" ilk="function" line="709" lineend="765" name="_registerDep" signature="_registerDep(&amp; $data, &amp; $pkg, $dep, $type, $group = false)"><variable ilk="argument" line="709" name="data" /><variable ilk="argument" line="709" name="pkg" /><variable ilk="argument" line="709" name="dep" /><variable ilk="argument" line="709" name="type" /><variable default="false" ilk="argument" line="709" name="group" /><variable citdl="array()" line="715" name="info" /><variable line="718" name="depchannel" /><variable citdl="strtolower()" line="724" name="package" /><variable line="737" name="i" /><variable citdl="data[]" line="737" name="p" /><variable citdl="boolean" line="736" name="found" /><variable citdl="strtolower()" line="723" name="channel" /></scope></scope></scope>
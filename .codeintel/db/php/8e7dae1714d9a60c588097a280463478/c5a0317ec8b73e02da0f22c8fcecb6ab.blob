<scope ilk="blob" lang="PHP" name="Builder.php" src="/usr/share/pear/PEAR/Builder.php"><import line="23" module="PEAR/Common.php" /><import line="24" module="PEAR/PackageFile.php" /><import line="25" module="System.php" /><scope classrefs="PEAR_Common" doc="Class to handle building (compiling) extensions.&#xA;&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Stig Bakken &lt;ssb@php.net&gt;&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since PHP 4.0.2&#xA;@see        http://pear.php.net/manual/en/core.ppm.pear-builder.php" ilk="class" line="41" lineend="559" name="PEAR_Builder"><variable citdl="int" line="43" name="php_api_version" /><variable citdl="int" line="44" name="zend_module_api_no" /><variable citdl="int" line="45" name="zend_extension_api_no" /><variable citdl="array()" line="47" name="extensions_built" /><variable citdl="string" doc="@var string Used for reporting when it is not possible to pass function&#xA;            via extra parameter, e.g. log, msdevCallback" line="53" name="current_callback" /><variable citdl="data" line="56" name="_lastline" /><variable citdl="data" line="57" name="_firstline" /><variable citdl="attribs" doc="Parsed --configureoptions.&#xA;&#xA;@var mixed[]" line="64" name="_parsed_configure_options" /><scope attributes="__ctor__" doc="&#xA;PEAR_Builder constructor.&#xA;&lt;mixed[]&gt; $configureoptions  - &#xA;&lt;object&gt; $ui  - user interface object (instance of PEAR_Frontend_*)&#xA;Access public&#xA;" ilk="function" line="74" lineend="79" name="__construct" signature="__construct($configureoptions, object &amp; $ui)"><variable ilk="argument" line="74" name="configureoptions" /><variable citdl="object" ilk="argument" line="74" name="ui" /></scope><scope doc="&#xA;Parse --configureoptions string.&#xA;&lt;string&gt; Options,  - in the form &quot;X=1 Y=2 Z=&apos;there\&apos;s always one&apos;&quot;&#xA;" ilk="function" line="86" lineend="96" name="_parseConfigureOptions" signature="_parseConfigureOptions($options)"><variable ilk="argument" line="86" name="options" /><variable citdl="xml_parser_create()" line="89" name="parser" /><variable citdl="string" line="88" name="data" /></scope><scope doc="&#xA;Handle element start.&#xA;See PEAR_Builder::_parseConfigureOptions()&#xA;&lt;resource&gt; $parser  - &#xA;&lt;string&gt; $tagName  - &#xA;&lt;mixed[]&gt; $attribs  - &#xA;" ilk="function" line="107" lineend="113" name="_parseConfigureOptionsStartElement" signature="_parseConfigureOptionsStartElement(resource $parser, string $tagName, $attribs)"><variable citdl="resource" ilk="argument" line="107" name="parser" /><variable citdl="string" ilk="argument" line="107" name="tagName" /><variable ilk="argument" line="107" name="attribs" /></scope><scope doc="Handle element end.&#xA;&#xA;@see PEAR_Builder::_parseConfigureOptions()&#xA;&#xA;@param resource&#xA;@param string $element" ilk="function" line="123" lineend="125" name="_parseConfigureOptionsEndElement" signature="_parseConfigureOptionsEndElement($parser, string $element)"><variable ilk="argument" line="123" name="parser" /><variable citdl="string" ilk="argument" line="123" name="element" /></scope><scope doc="&#xA;Build an extension from source on windows.&#xA;requires msdev&#xA;" ilk="function" line="131" lineend="223" name="_build_win32" returns="pkg" signature="_build_win32($descfile, $callback = null)"><variable ilk="argument" line="131" name="descfile" /><variable default="null" ilk="argument" line="131" name="callback" /><variable citdl="string" line="202" name="regex" /><variable citdl="string" line="176" name="buildtype" /><variable citdl="getcwd()" line="144" name="old_cwd" /><variable citdl="this._runCommand()" line="169" name="err" /><variable citdl="pkg.getPackage()" line="151" name="vdir" /><variable citdl="realpath()" line="206" name="outfile" /><variable citdl="pkg.getPackage()" line="162" name="dsp" /><variable citdl="string" line="175" name="platform" /><variable citdl="PEAR_PackageFile" line="137" name="pf" /><variable citdl="descfile" line="134" name="pkg" /><variable citdl="join()" line="194" name="dsptext" /><variable citdl="string" line="167" name="command" /><variable citdl="dirname()" line="143" name="dir" /><variable citdl="matches" line="187" name="out" /></scope><scope doc="&#xA;{{{ msdevCallback()&#xA;" ilk="function" line="227" lineend="233" name="msdevCallback" signature="msdevCallback($what, $data)"><variable ilk="argument" line="227" name="what" /><variable ilk="argument" line="227" name="data" /></scope><scope doc="@param string&#xA;@param string&#xA;@param array&#xA;@access private" ilk="function" line="241" lineend="273" name="_harvestInstDir" returns="boolean" signature="_harvestInstDir($dest_prefix, $dirname, &amp; $built_files)"><variable ilk="argument" line="241" name="dest_prefix" /><variable ilk="argument" line="241" name="dirname" /><variable ilk="argument" line="241" name="built_files" /><variable citdl="dest_prefix" line="261" name="dest" /><variable citdl="dirname" line="252" name="full" /><variable line="248" name="ent" /><variable citdl="opendir()" line="243" name="d" /><variable citdl="boolean" line="247" name="ret" /></scope><scope doc="&#xA;Build an extension from source.  Runs &quot;phpize&quot; in the source&#xA;directory, but compiles in a temporary directory&#xA;(TMPDIR/pear-build-USER/PACKAGE-VERSION).&#xA;&lt;string|pear_packagefile_v*&gt; $descfile  - path to XML package description file, or&#xA;              a PEAR_PackageFile object&#xA;&lt;mixed&gt; $callback  - callback function used to report output,&#xA;see PEAR_Builder::_runCommand for details&#xA;Returns array  - an array of associative arrays with built files,&#xA;format:&#xA;array( array( &apos;file&apos; =&gt; &apos;/path/to/ext.so&apos;,&#xA;              &apos;php_api&apos; =&gt; YYYYMMDD,&#xA;              &apos;zend_mod_api&apos; =&gt; YYYYMMDD,&#xA;              &apos;zend_ext_api&apos; =&gt; YYYYMMDD ),&#xA;       ... )&#xA;Access public&#xA;See PEAR_Builder::_runCommand&#xA;" ilk="function" line="298" lineend="471" name="build" returns="array" signature="array build($descfile, mixed $callback = null)"><variable ilk="argument" line="298" name="descfile" /><variable citdl="mixed" default="null" ilk="argument" line="298" name="callback" /><variable citdl="array()" line="464" name="built_files" /><variable citdl="string" line="421" name="inst_dir" /><variable citdl="exec()" line="467" name="prefix" /><variable citdl="descfile" line="327" name="pkg" /><variable citdl="this.config.get()" line="365" name="binDir" /><variable citdl="getcwd()" line="353" name="old_cwd" /><variable citdl="string" line="420" name="build_dir" /><variable citdl="PEAR_PackageFile" line="337" name="pf" /><variable citdl="this.config.get()" line="418" name="tmpdir" /><variable citdl="string" line="382" name="configure_command" /><variable citdl="configure_options[]" line="395" name="option" /><variable citdl="pkg.getPackage()" line="358" name="vdir" /><variable citdl="System.mktemp()" line="419" name="build_basedir" /><variable citdl="System.which()" line="387" name="phpConfigPath" /><variable citdl="string" line="415" name="user" /><variable citdl="array()" line="444" name="to_run" /><variable citdl="this.config.get()" line="386" name="phpConfigName" /><variable citdl="this._parsed_configure_options" line="398" name="response" /><variable citdl="this._runCommand()" line="372" name="err" /><variable citdl="array_key_exists()" line="396" name="default" /><variable citdl="to_run[]" line="449" name="cmd" /><variable citdl="array_keys()[]" line="346" name="item" /><variable citdl="pkg.getConfigureOptions()" line="393" name="configure_options" /><variable citdl="getenv()" line="437" name="make_command" /><variable citdl="dirname()" line="330" name="dir" /></scope><scope doc="&#xA;Message callback function used when running the &quot;phpize&quot;&#xA;program.  Extracts the API numbers used.  Ignores other message&#xA;types than &quot;cmdoutput&quot;.&#xA;&lt;string&gt; $what  - the type of message&#xA;&lt;mixed&gt; $data  - the message&#xA;Returns void &#xA;Access public&#xA;" ilk="function" line="485" lineend="504" name="phpizeCallback" signature="void phpizeCallback(string $what, mixed $data)"><variable citdl="string" ilk="argument" line="485" name="what" /><variable citdl="mixed" ilk="argument" line="485" name="data" /><variable citdl="array()" line="494" name="matches" /><variable citdl="preg_replace()" line="496" name="member" /><variable citdl="int" line="497" name="apino" /></scope><scope doc="&#xA;Run an external command, using a message callback to report&#xA;output.  The command will be run through popen and output is&#xA;reported for every line with a &quot;cmdoutput&quot; message with the&#xA;line string, including newlines, as payload.&#xA;&lt;string&gt; $command  - the command to run&#xA;&lt;mixed&gt; $callback  - (optional) function to use as message&#xA;callback&#xA;Returns bool  - whether the command was successful (exit code 0&#xA;means success, any other means failure)&#xA;Access private&#xA;" ilk="function" line="522" lineend="547" name="_runCommand" returns="bool" signature="bool _runCommand(string $command, mixed $callback = null)"><variable citdl="string" ilk="argument" line="522" name="command" /><variable citdl="mixed" default="null" ilk="argument" line="522" name="callback" /><variable citdl="popen()" line="525" name="pp" /><variable line="534" name="line" /><variable citdl="callback" line="530" name="olddbg" /><variable citdl="is_resource()" line="545" name="exitcode" /></scope><scope ilk="function" line="549" lineend="558" name="log" signature="log($level, $msg, $append_crlf = true)"><variable ilk="argument" line="549" name="level" /><variable ilk="argument" line="549" name="msg" /><variable default="true" ilk="argument" line="549" name="append_crlf" /></scope></scope></scope>
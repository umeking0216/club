<scope ilk="blob" lang="PHP" name="RunTest.php" src="/usr/share/pear/PEAR/RunTest.php"><import line="20" module="PEAR.php" /><import line="21" module="PEAR/Config.php" /><import line="93" module="PEAR/Common.php" /><variable citdl="int" ilk="constant" line="23" name="DETAILED" /><scope doc="Simplified version of PHP&apos;s test suite&#xA;&#xA;Try it with:&#xA;&#xA;$ php -r &apos;include &quot;../PEAR/RunTest.php&quot;; $t=new PEAR_RunTest; $o=$t-&gt;run(&quot;./pear_system.phpt&quot;);print_r($o);&apos;&#xA;&#xA;&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Tomas V.V.Cox &lt;cox@idecnet.com&gt;&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.3.3" ilk="class" line="44" lineend="972" name="PEAR_RunTest"><variable citdl="array()" line="46" name="_headers" /><variable citdl="logger" line="47" name="_logger" /><variable citdl="options" line="48" name="_options" /><variable citdl="conf.get()" line="49" name="_php" /><variable line="50" name="tests_count" /><variable line="51" name="xdebug_loaded" /><variable citdl="unknown_type" doc="Saved value of php executable, used to reset $_php when we&#xA;have a test that uses cgi&#xA;&#xA;@var unknown_type" line="58" name="_savephp" /><variable citdl="array()" line="77" name="ini_overwrites" /><scope attributes="__ctor__" doc="An object that supports the PEAR_Common-&gt;log() signature, or null&#xA;@param PEAR_Common|null" ilk="function" line="83" lineend="101" name="__construct" signature="__construct($logger = null, $options = array())"><variable default="null" ilk="argument" line="83" name="logger" /><variable default="array()" ilk="argument" line="83" name="options" /><variable citdl="PEAR_Config.singleton()" line="99" name="conf" /></scope><scope doc="&#xA;Taken from php-src/run-tests.php&#xA;&lt;string&gt; $commandline  - command name&#xA;&lt;array&gt; $env  - &#xA;&lt;string&gt; $stdin  - standard input to pass to the command&#xA;Returns unknown &#xA;" ilk="function" line="111" lineend="161" name="system_with_timeout" returns="unknown" signature="unknown system_with_timeout(string $commandline, array $env = null, string $stdin = null)"><variable citdl="string" ilk="argument" line="111" name="commandline" /><variable citdl="array" default="null" ilk="argument" line="111" name="env" /><variable citdl="string" default="null" ilk="argument" line="111" name="stdin" /><variable citdl="proc_get_status()" line="151" name="stat" /><variable citdl="proc_close()" line="156" name="code" /><variable citdl="w" line="133" name="e" /><variable citdl="string" line="113" name="data" /><variable line="134" name="n" /><variable citdl="pipes" line="131" name="r" /><variable line="134" name="w" /><variable citdl="fread()" line="142" name="line" /><variable citdl="proc_open()" line="118" name="proc" /></scope><scope doc="&#xA;Turns a PHP INI string into an array&#xA;Turns -d &quot;include_path=/foo/bar&quot; into this:&#xA;array(&#xA;  &apos;include_path&apos; =&gt; array(&#xA;         &apos;operator&apos; =&gt; &apos;-d&apos;,&#xA;         &apos;value&apos;    =&gt; &apos;/foo/bar&apos;,&#xA;  )&#xA;)&#xA;Works both with quotes and without&#xA;&lt;string&gt; an  - PHP INI string, -d &quot;include_path=/foo/bar&quot;&#xA;Returns array &#xA;" ilk="function" line="178" lineend="189" name="iniString2array" returns="array" signature="array iniString2array($ini_string)"><variable ilk="argument" line="178" name="ini_string" /><variable citdl="split" line="185" name="value" /><variable citdl="array()" line="187" name="array" /><variable citdl="preg_split()" line="183" name="split" /><variable citdl="split" line="184" name="key" /></scope><scope ilk="function" line="191" lineend="202" name="settings2array" returns="ini_settings" signature="settings2array($settings, $ini_settings)"><variable ilk="argument" line="191" name="settings" /><variable ilk="argument" line="191" name="ini_settings" /><variable citdl="settings[]" line="193" name="setting" /><variable citdl="trim()" line="196" name="name" /><variable citdl="trim()" line="197" name="value" /></scope><scope ilk="function" line="204" lineend="218" name="settings2params" returns="settings" signature="settings2params($ini_settings)"><variable ilk="argument" line="204" name="ini_settings" /><variable citdl="value" line="209" name="operator" /><variable line="207" name="name" /><variable citdl="ini_settings[]" line="207" name="value" /><variable citdl="string" line="206" name="settings" /></scope><scope ilk="function" line="220" lineend="226" name="_preparePhpBin" returns="cmd" signature="_preparePhpBin($php, $file, $ini_settings)"><variable ilk="argument" line="220" name="php" /><variable ilk="argument" line="220" name="file" /><variable ilk="argument" line="220" name="ini_settings" /><variable citdl="php" line="223" name="cmd" /></scope><scope ilk="function" line="228" lineend="246" name="runPHPUnit" returns="string" signature="runPHPUnit($file, $ini_settings = &apos;&apos;)"><variable ilk="argument" line="228" name="file" /><variable default="&apos;&apos;" ilk="argument" line="228" name="ini_settings" /><variable citdl="getcwd()" line="241" name="savedir" /><variable citdl="this._preparePhpBin()" line="236" name="cmd" /></scope><scope doc="&#xA;Runs an individual test case.&#xA;&lt;string&gt; The  - filename of the test&#xA;&lt;array|string&gt; INI  - settings to be applied to the test run&#xA;&lt;integer&gt; Number  - what the current running test is of the&#xA;                    whole test suite being runned.&#xA;Returns string|object  - Returns PASSED, WARNED, FAILED depending on how the&#xA;                      test came out.&#xA;                      PEAR Error when the tester it self fails&#xA;" ilk="function" line="260" lineend="665" name="run" returns="string" signature="string run($file, $ini_settings = array(), $test_number = 1)"><variable ilk="argument" line="260" name="file" /><variable default="array()" ilk="argument" line="260" name="ini_settings" /><variable default="1" ilk="argument" line="260" name="test_number" /><variable citdl="strlen()" line="444" name="content_length" /><variable citdl="string" line="403" name="cmd" /><variable citdl="basename()" line="330" name="main_file_name" /><variable citdl="temp_dir" line="337" name="temp_skipif" /><variable citdl="explode()" line="419" name="raw_lines" /><variable citdl="string" line="356" name="text" /><variable citdl="string" line="421" name="request" /><variable citdl="temp_dir" line="334" name="output_filename" /><variable citdl="count()" line="369" name="numLines" /><variable citdl="temp_dir" line="335" name="memcheck_filename" /><variable citdl="out" line="468" name="return_value" /><variable citdl="preg_split()" line="304" name="ini" /><variable citdl="string" line="485" name="changed" /><variable citdl="boolean" line="463" name="returnfail" /><variable citdl="warn" line="604" name="txt" /><variable citdl="raw_lines[]" line="423" name="line" /><variable citdl="ob_get_contents()" line="460" name="out" /><variable citdl="temp_dir" line="331" name="diff_filename" /><variable citdl="string" line="371" name="coverage_shutdown" /><variable citdl="this._writeLog()" line="266" name="res" /><variable citdl="string" line="370" name="namespace" /><variable line="621" name="returns" /><variable citdl="realpath()" line="329" name="temp_dir" /><variable citdl="this.generate_diff()" line="583" name="faildiff" /><variable citdl="str_replace()" line="308" name="shortname" /><variable citdl="getcwd()" line="288" name="cwd" /><variable citdl="this._resetEnv()" line="410" name="env" /><variable citdl="array_diff_assoc()" line="484" name="missing" /><variable citdl="boolean" line="422" name="started" /><variable citdl="temp_dir" line="354" name="xdebug_file" /><variable citdl="temp_dir" line="332" name="log_filename" /><variable citdl="section_text" line="402" name="args" /><variable citdl="res" line="350" name="warn" /><variable citdl="trim()" line="310" name="tested" /><variable citdl="str_replace()" line="510" name="wanted_re" /><variable citdl="temp_dir" line="339" name="tmp_post" /><variable citdl="this._processHeaders()" line="483" name="testheaders" /><variable citdl="this._readFile()" line="279" name="section_text" /><variable citdl="trim()" line="418" name="post" /><variable citdl="trim()" line="506" name="wanted" /><variable citdl="this.generate_diff()" line="623" name="data" /><variable citdl="temp_dir" line="338" name="temp_clean" /><variable line="466" name="stdin" /><variable citdl="res" line="349" name="info" /><variable citdl="temp_dir" line="545" name="f" /><variable line="582" name="expectf" /><variable line="486" name="header" /><variable citdl="string" line="290" name="pass_options" /><variable citdl="temp_dir" line="333" name="exp_filename" /><variable citdl="explode()" line="368" name="lines" /><variable citdl="missing[]" line="486" name="value" /><variable line="381" name="i" /><variable citdl="string" line="273" name="test_nr" /><variable citdl="preg_replace()" line="472" name="output" /><variable citdl="temp_dir" line="336" name="temp_file" /></scope><scope ilk="function" line="667" lineend="691" name="generate_diff" returns="implode()" signature="generate_diff($wanted, $output, $rvalue, $wanted_re)"><variable ilk="argument" line="667" name="wanted" /><variable ilk="argument" line="667" name="output" /><variable ilk="argument" line="667" name="rvalue" /><variable ilk="argument" line="667" name="wanted_re" /><variable citdl="explode()" line="669" name="w" /><variable line="675" name="idx" /><variable citdl="rvalue" line="689" name="extra" /><variable citdl="explode()" line="670" name="o" /><variable citdl="w1[]" line="675" name="val" /><variable citdl="explode()" line="671" name="wr" /><variable citdl="array_diff_assoc()" line="672" name="w1" /><variable citdl="array_merge()" line="687" name="diff" /><variable citdl="w2" line="674" name="o2" /><variable citdl="array_diff_assoc()" line="673" name="o1" /></scope><scope doc="&#xA;Write the given text to a temporary file, and return the filename.&#xA;" ilk="function" line="694" lineend="706" name="save_text" returns="PEAR.raiseError()" signature="save_text($filename, $text)"><variable ilk="argument" line="694" name="filename" /><variable ilk="argument" line="694" name="text" /></scope><scope ilk="function" line="708" lineend="732" name="_cleanupOldFiles" signature="_cleanupOldFiles($file)"><variable ilk="argument" line="708" name="file" /><variable citdl="temp_dir" line="712" name="diff_filename" /><variable citdl="temp_dir" line="718" name="temp_skipif" /><variable citdl="temp_dir" line="713" name="log_filename" /><variable citdl="temp_dir" line="714" name="exp_filename" /><variable citdl="basename()" line="711" name="mainFileName" /><variable citdl="temp_dir" line="715" name="output_filename" /><variable citdl="temp_dir" line="716" name="memcheck_filename" /><variable citdl="temp_dir" line="720" name="tmp_post" /><variable citdl="realpath()" line="710" name="temp_dir" /><variable citdl="temp_dir" line="719" name="temp_clean" /><variable citdl="temp_dir" line="717" name="temp_file" /></scope><scope ilk="function" line="734" lineend="771" name="_runSkipIf" returns="array()" signature="_runSkipIf($section_text, $temp_skipif, $tested, $ini_settings)"><variable ilk="argument" line="734" name="section_text" /><variable ilk="argument" line="734" name="temp_skipif" /><variable ilk="argument" line="734" name="tested" /><variable ilk="argument" line="734" name="ini_settings" /><variable citdl="string" line="736" name="info" /><variable citdl="boolean" line="737" name="warn" /><variable citdl="string" line="745" name="skipreason" /><variable citdl="ltrim()" line="742" name="loutput" /><variable citdl="this.system_with_timeout()" line="740" name="output" /></scope><scope ilk="function" line="773" lineend="784" name="_stripHeadersCGI" returns="output" signature="_stripHeadersCGI($output)"><variable ilk="argument" line="773" name="output" /></scope><variable citdl="array()" line="775" name="headers" /><scope doc="&#xA;Return an array that can be used with array_diff() to compare headers&#xA;&lt;string&gt; $text  - &#xA;" ilk="function" line="791" lineend="802" name="_processHeaders" returns="headers" signature="_processHeaders(string $text)"><variable citdl="string" ilk="argument" line="791" name="text" /><variable citdl="array()" line="793" name="headers" /><variable citdl="rh[]" line="795" name="line" /><variable citdl="preg_split()" line="794" name="rh" /></scope><scope ilk="function" line="804" lineend="842" name="_readFile" returns="PEAR.raiseError()" signature="_readFile($file)"><variable ilk="argument" line="804" name="file" /><variable attributes="__not_yet_defined__" line="823" name="fp" /><variable citdl="array()" line="816" name="section_text" /><variable citdl="string" line="822" name="section" /><variable citdl="fgets()" line="824" name="line" /></scope><scope ilk="function" line="844" lineend="851" name="_writeLog" returns="PEAR.raiseError()" signature="_writeLog($logname, $data)"><variable ilk="argument" line="844" name="logname" /><variable ilk="argument" line="844" name="data" /></scope><scope ilk="function" line="853" lineend="889" name="_resetEnv" returns="env" signature="_resetEnv($section_text, $temp_file)"><variable ilk="argument" line="853" name="section_text" /><variable ilk="argument" line="853" name="temp_file" /><variable citdl="explode()[]" line="867" name="e" /><variable citdl="_ENV" line="855" name="env" /></scope><scope ilk="function" line="891" lineend="940" name="_processUpload" returns="PEAR.raiseError()" signature="_processUpload($section_text, $file)"><variable ilk="argument" line="891" name="section_text" /><variable ilk="argument" line="891" name="file" /><variable citdl="trim()" line="894" name="upload_files" /><variable line="920" name="i" /><variable citdl="string" line="898" name="request" /><variable citdl="post[]" line="920" name="post_info" /><variable citdl="file_get_contents()" line="908" name="file_contents" /><variable citdl="trim()" line="918" name="post" /><variable citdl="upload_files[]" line="899" name="fileinfo" /></scope><scope ilk="function" line="942" lineend="957" name="_testCleanup" signature="_testCleanup($section_text, $temp_clean)"><variable ilk="argument" line="942" name="section_text" /><variable ilk="argument" line="942" name="temp_clean" /><variable citdl="this.system_with_timeout()" line="949" name="output" /></scope><scope ilk="function" line="959" lineend="962" name="_savePHPBinary" signature="_savePHPBinary()" /><scope ilk="function" line="964" lineend="971" name="_restorePHPBinary" signature="_restorePHPBinary()" /></scope><variable citdl="int" ilk="constant" line="86" name="E_DEPRECATED" /><variable citdl="int" ilk="constant" line="89" name="E_STRICT" /></scope>
<scope ilk="blob" lang="PHP" name="REST.php" src="/usr/share/pear/PEAR/REST.php"><import line="19" module="PEAR.php" /><import line="20" module="PEAR/XMLParser.php" /><import line="21" module="PEAR/Proxy.php" /><scope doc="Intelligently retrieve data, following hyperlinks if necessary, and re-directing&#xA;as well&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="35" lineend="474" name="PEAR_REST"><variable citdl="config" line="37" name="config" /><variable citdl="options" line="38" name="_options" /><scope attributes="__ctor__" ilk="function" line="40" lineend="44" name="__construct" signature="__construct(&amp; $config, $options = array())"><variable ilk="argument" line="40" name="config" /><variable default="array()" ilk="argument" line="40" name="options" /></scope><scope doc="&#xA;Retrieve REST data, but always retrieve the local cache if it is available.&#xA;This is useful for elements that should never change, such as information on a particular&#xA;release&#xA;&lt;string&gt; full  - URL to this resource&#xA;&lt;array|false&gt; contents  - of the accept-encoding header&#xA;&lt;boolean&gt; if  - true, xml will be returned as a string, otherwise, xml will be&#xA;                   parsed using PEAR_XMLParser&#xA;Returns string|array &#xA;" ilk="function" line="57" lineend="67" name="retrieveCacheFirst" returns="string" signature="string retrieveCacheFirst($url, $accept = false, $forcestring = false, $channel = false)"><variable ilk="argument" line="57" name="url" /><variable default="false" ilk="argument" line="57" name="accept" /><variable default="false" ilk="argument" line="57" name="forcestring" /><variable default="false" ilk="argument" line="57" name="channel" /><variable citdl="this.config.get()" line="60" name="cachefile" /></scope><scope doc="&#xA;Retrieve a remote REST resource&#xA;&lt;string&gt; full  - URL to this resource&#xA;&lt;array|false&gt; contents  - of the accept-encoding header&#xA;&lt;boolean&gt; if  - true, xml will be returned as a string, otherwise, xml will be&#xA;                   parsed using PEAR_XMLParser&#xA;Returns string|array &#xA;" ilk="function" line="77" lineend="171" name="retrieveData" returns="string" signature="string retrieveData($url, $accept = false, $forcestring = false, $channel = false)"><variable ilk="argument" line="77" name="url" /><variable default="false" ilk="argument" line="77" name="accept" /><variable default="false" ilk="argument" line="77" name="forcestring" /><variable default="false" ilk="argument" line="77" name="channel" /><variable citdl="explode()" line="132" name="content_type" /><variable citdl="parser.parse()" line="147" name="err" /><variable citdl="file" line="114" name="lastmodified" /><variable citdl="this.getCacheId()" line="79" name="cacheId" /><variable citdl="PEAR_XMLParser" line="145" name="parser" /><variable citdl="this.getCache()" line="100" name="ret" /><variable citdl="substr()" line="139" name="check" /><variable citdl="file" line="115" name="content" /><variable citdl="file" line="113" name="headers" /><variable citdl="this.saveCache()" line="103" name="result" /><variable citdl="trieddownload" line="84" name="file" /><variable citdl="boolean" line="86" name="trieddownload" /></scope><scope ilk="function" line="173" lineend="186" name="useLocalCache" returns="this.getCache()" signature="useLocalCache($url, $cacheid = null)"><variable ilk="argument" line="173" name="url" /><variable default="null" ilk="argument" line="173" name="cacheid" /><variable citdl="this.config.get()" line="179" name="cachettl" /></scope><scope doc="&#xA;&lt;string&gt; $url  - &#xA;Returns bool|mixed &#xA;" ilk="function" line="193" lineend="204" name="getCacheId" returns="bool" signature="bool getCacheId(string $url)"><variable citdl="string" ilk="argument" line="193" name="url" /><variable citdl="this.config.get()" line="196" name="cacheidfile" /><variable citdl="unserialize()" line="202" name="ret" /></scope><scope ilk="function" line="206" lineend="216" name="getCache" returns="PEAR.raiseError()" signature="getCache($url)"><variable ilk="argument" line="206" name="url" /><variable citdl="this.config.get()" line="209" name="cachefile" /></scope><scope doc="&#xA;&lt;string&gt; full  - URL to REST resource&#xA;&lt;string&gt; original  - contents of the REST resource&#xA;&lt;array&gt; HTTP  - Last-Modified and ETag headers&#xA;&lt;bool&gt; if  - true, then the cache id file should be regenerated to&#xA;              trigger a new time-to-live value&#xA;" ilk="function" line="225" lineend="271" name="saveCache" returns="PEAR.raiseError()" signature="saveCache($url, $contents, $lastmodified, $nochange = false, $cacheid = null)"><variable ilk="argument" line="225" name="url" /><variable ilk="argument" line="225" name="contents" /><variable ilk="argument" line="225" name="lastmodified" /><variable default="false" ilk="argument" line="225" name="nochange" /><variable default="null" ilk="argument" line="225" name="cacheid" /><variable citdl="cache_dir" line="228" name="d" /><variable citdl="d" line="230" name="cachefile" /><variable citdl="this.config.get()" line="227" name="cache_dir" /><variable citdl="this.saveCacheFile()" line="254" name="result" /><variable citdl="d" line="229" name="cacheidfile" /><variable citdl="serialize()" line="252" name="idData" /></scope><scope ilk="function" line="273" lineend="315" name="saveCacheFile" returns="PEAR.raiseError()" signature="saveCacheFile($file, $contents)"><variable ilk="argument" line="273" name="file" /><variable ilk="argument" line="273" name="contents" /><variable line="277" name="cachefile_fp" /><variable citdl="lstat()" line="292" name="cachefile_lstat" /><variable citdl="fstat()" line="293" name="cachefile_fstat" /><variable citdl="strlen()" line="275" name="len" /><variable citdl="function_exists()" line="308" name="link" /><variable citdl="cachefile_lstat" line="290" name="not_symlink" /></scope><scope doc="&#xA;Efficiently Download a file through HTTP.  Returns downloaded file as a string in-memory&#xA;This is best used for small files&#xA;If an HTTP proxy has been configured (http_proxy PEAR_Config&#xA;setting), the proxy will be used.&#xA;&lt;string&gt; $url  - the URL to download&#xA;&lt;string&gt; $save_dir  - directory to save file in&#xA;&lt;false|string|array&gt; $lastmodified  - header values to check against for caching&#xA;                          use false to return the header values from this download&#xA;&lt;false|array&gt; $accept  - Accept headers to send&#xA;Returns string|array  - Returns the contents of the downloaded file or a PEAR&#xA;                      error on failure.  If the error is caused by&#xA;                      socket-related errors, the error object will&#xA;                      have the fsockopen error code available through&#xA;                      getCode().  If caching is requested, then return the header&#xA;                      values.&#xA;Access public&#xA;" ilk="function" line="338" lineend="473" name="downloadHttp" returns="string" signature="string downloadHttp(string $url, $lastmodified = null, $accept = false, $channel = false, string $save_dir)"><variable citdl="string" ilk="argument" line="338" name="url" /><variable default="null" ilk="argument" line="338" name="lastmodified" /><variable default="false" ilk="argument" line="338" name="accept" /><variable default="false" ilk="argument" line="338" name="channel" /><variable citdl="string" ilk="argument" line="338" name="save_dir" /><variable citdl="proxy.openSocket()" line="411" name="fp" /><variable line="410" name="secure" /><variable line="451" name="chunk" /><variable line="355" name="port" /><variable citdl="int" line="343" name="redirect" /><variable attributes="__not_yet_defined__" line="423" name="matches" /><variable citdl="int" line="419" name="reply" /><variable line="357" name="schema" /><variable citdl="this.config.get()" line="388" name="username" /><variable citdl="base64_encode()" line="392" name="tmp" /><variable citdl="redirect" line="342" name="wasredirect" /><variable line="354" name="host" /><variable citdl="PEAR_Proxy" line="359" name="proxy" /><variable line="356" name="path" /><variable line="420" name="line" /><variable citdl="this.config.get()" line="389" name="password" /><variable citdl="string" line="450" name="data" /><variable citdl="string" line="372" name="ifmodifiedsince" /><variable citdl="parse_url()" line="345" name="info" /><variable citdl="string" line="366" name="request" /><variable citdl="array()" line="418" name="headers" /><variable line="448" name="length" /><variable citdl="proxy.getProxyAuth()" line="396" name="proxyAuth" /></scope><variable attributes="static" citdl="int" line="340" name="redirect" /></scope></scope>
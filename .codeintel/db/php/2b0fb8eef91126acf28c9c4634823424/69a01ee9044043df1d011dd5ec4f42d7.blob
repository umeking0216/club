<scope ilk="blob" lang="PHP" name="v1.php" src="/usr/share/pear/PEAR/PackageFile/Parser/v1.php"><import line="18" module="PEAR/PackageFile/v1.php" /><scope doc="Parser for package.xml version 1.0&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: @PEAR-VER@&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="30" lineend="457" name="PEAR_PackageFile_Parser_v1"><variable citdl="c.getRegistry()" line="32" name="_registry" /><variable citdl="c" line="33" name="_config" /><variable citdl="l" line="34" name="_logger" /><scope doc="BC hack to allow PEAR_Common::infoFromString() to sort of&#xA;work with the version 2.0 format - there&apos;s no filelist though&#xA;@param PEAR_PackageFile_v2" ilk="function" line="40" lineend="45" name="fromV2" signature="fromV2($packagefile)"><variable ilk="argument" line="40" name="packagefile" /><variable citdl="packagefile.getArray()" line="42" name="info" /><variable citdl="PEAR_PackageFile_v1" line="43" name="ret" /></scope><scope ilk="function" line="47" lineend="51" name="setConfig" signature="setConfig(&amp; $c)"><variable ilk="argument" line="47" name="c" /></scope><scope ilk="function" line="53" lineend="56" name="setLogger" signature="setLogger(&amp; $l)"><variable ilk="argument" line="53" name="l" /></scope><scope doc="&#xA;&lt;string&gt; contents  - of package.xml file, version 1.0&#xA;Returns bool  - success of parsing&#xA;" ilk="function" line="62" lineend="108" name="parse" returns="bool" signature="bool &amp;parse($data, $file, $archive = false)"><variable ilk="argument" line="62" name="data" /><variable ilk="argument" line="62" name="file" /><variable default="false" ilk="argument" line="62" name="archive" /><variable citdl="PEAR.raiseError()" line="69" name="a" /><variable citdl="xml_parser_create()" line="67" name="xp" /><variable citdl="xml_get_error_code()" line="90" name="code" /><variable citdl="PEAR_PackageFile_v1" line="100" name="pf" /><variable citdl="xml_get_current_line_number()" line="91" name="line" /></scope><variable citdl="array()" line="77" name="element_stack" /><variable citdl="array()" line="78" name="_packageInfo" /><variable citdl="boolean" line="79" name="current_element" /><variable citdl="this._packageInfo" line="82" name="filelist" /><variable citdl="array()" line="83" name="dir_names" /><variable citdl="boolean" line="84" name="in_changelog" /><variable citdl="int" line="85" name="d_i" /><variable citdl="string" line="86" name="cdata" /><variable citdl="boolean" line="87" name="_isValid" /><scope doc="&#xA;Unindent given string&#xA;&lt;string&gt; $str  - The string that has to be unindented.&#xA;Returns string &#xA;Access private&#xA;" ilk="function" line="118" lineend="135" name="_unIndent" returns="string" signature="string _unIndent(string $str)"><variable citdl="string" ilk="argument" line="118" name="str" /><variable citdl="substr()" line="124" name="indent" /><variable citdl="explode()[]" line="127" name="line" /><variable citdl="strspn()" line="123" name="indent_len" /><variable citdl="string" line="125" name="data" /></scope><scope doc="&#xA;XML parser callback for ending elements.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - name of ending element&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="151" lineend="283" name="_element_start_1_0" signature="void _element_start_1_0(resource $xp, string $name, $attribs)"><variable citdl="resource" ilk="argument" line="151" name="xp" /><variable citdl="string" ilk="argument" line="151" name="name" /><variable ilk="argument" line="151" name="attribs" /><variable citdl="string" line="188" name="path" /><variable citdl="sizeof()" line="155" name="spos" /><variable citdl="this.dir_names[]" line="190" name="dir" /></scope><variable line="156" name="prev_element" /><variable citdl="attribs" line="157" name="current_attributes" /><variable citdl="attribs" line="177" name="dir_install" /><variable citdl="attribs" line="180" name="dir_role" /><variable citdl="path" line="197" name="current_path" /><variable citdl="int" line="218" name="m_i" /><variable citdl="this._packageInfo" line="227" name="current_maintainer" /><variable citdl="int" line="231" name="c_i" /><variable citdl="this._packageInfo" line="237" name="current_release" /><scope doc="&#xA;XML parser callback for ending elements.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - name of ending element&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="299" lineend="433" name="_element_end_1_0" signature="void _element_end_1_0(resource $xp, string $name)"><variable citdl="resource" ilk="argument" line="299" name="xp" /><variable citdl="string" ilk="argument" line="299" name="name" /><variable citdl="string" line="394" name="path" /><variable citdl="sizeof()" line="430" name="spos" /><variable citdl="trim()" line="301" name="data" /><variable citdl="this.dir_names[]" line="396" name="dir" /></scope><scope doc="&#xA;XML parser callback for character data.  Used for version 1.0&#xA;packages.&#xA;&lt;resource&gt; $xp  - XML parser resource&#xA;&lt;string&gt; $name  - character data&#xA;Returns void &#xA;Access private&#xA;" ilk="function" line="449" lineend="454" name="_pkginfo_cdata_1_0" signature="void _pkginfo_cdata_1_0(resource $xp, $data, string $name)"><variable citdl="resource" ilk="argument" line="449" name="xp" /><variable ilk="argument" line="449" name="data" /><variable citdl="string" ilk="argument" line="449" name="name" /></scope></scope></scope>
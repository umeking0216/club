<scope ilk="blob" lang="PHP" name="v2.php" src="/usr/share/pear/PEAR/PackageFile/Parser/v2.php"><import line="18" module="PEAR/XMLParser.php" /><import line="19" module="PEAR/PackageFile/v2.php" /><scope classrefs="PEAR_XMLParser" doc="Parser for package.xml version 2.0&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: @PEAR-VER@&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="31" lineend="112" name="PEAR_PackageFile_Parser_v2"><variable citdl="c" line="33" name="_config" /><variable citdl="l" line="34" name="_logger" /><variable citdl="c.getRegistry()" line="35" name="_registry" /><scope ilk="function" line="37" lineend="41" name="setConfig" signature="setConfig(&amp; $c)"><variable ilk="argument" line="37" name="c" /></scope><scope ilk="function" line="43" lineend="46" name="setLogger" signature="setLogger(&amp; $l)"><variable ilk="argument" line="43" name="l" /></scope><scope doc="&#xA;Unindent given string&#xA;&lt;string&gt; $str  - The string that has to be unindented.&#xA;Returns string &#xA;Access private&#xA;" ilk="function" line="54" lineend="71" name="_unIndent" returns="string" signature="string _unIndent(string $str)"><variable citdl="string" ilk="argument" line="54" name="str" /><variable citdl="substr()" line="60" name="indent" /><variable citdl="explode()[]" line="63" name="line" /><variable citdl="strspn()" line="59" name="indent_len" /><variable citdl="string" line="61" name="data" /></scope><scope doc="&#xA;post-process data&#xA;&lt;string&gt; $data  - &#xA;&lt;string&gt; $element  - element name&#xA;" ilk="function" line="79" lineend="85" name="postProcess" returns="trim()" signature="postProcess(string $data, string $element)"><variable citdl="string" ilk="argument" line="79" name="data" /><variable citdl="string" ilk="argument" line="79" name="element" /></scope><scope doc="@param string&#xA;@param string file name of the package.xml&#xA;@param string|false name of the archive this package.xml came from, if any&#xA;@param string class name to instantiate and return.  This must be PEAR_PackageFile_v2 or&#xA;              a subclass&#xA;@return PEAR_PackageFile_v2" ilk="function" line="95" lineend="111" name="parse" returns="PEAR_PackageFile_v2" signature="pear_packagefile_v2 parse($data, $file = null, $archive = false, $class = &apos;PEAR_PackageFile_v2&apos;)"><variable ilk="argument" line="95" name="data" /><variable default="null" ilk="argument" line="95" name="file" /><variable default="false" ilk="argument" line="95" name="archive" /><variable default="&apos;PEAR_PackageFile_v2&apos;" ilk="argument" line="95" name="class" /><variable line="101" name="ret" /></scope></scope></scope>
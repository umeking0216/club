<scope ilk="blob" lang="PHP" name="Install.php" src="/usr/share/pear/PEAR/Command/Install.php"><import line="20" module="PEAR/Command/Common.php" /><import line="333" module="PEAR/Downloader.php" /><import line="345" module="PEAR/Installer.php" /><import line="531" module="PEAR/PackageFile.php" /><scope classrefs="PEAR_Command_Common" doc="PEAR commands for installation or deinstallation/upgrading of&#xA;packages.&#xA;&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Stig Bakken &lt;ssb@php.net&gt;&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 0.1" ilk="class" line="36" lineend="1273" name="PEAR_Command_Install"><variable citdl="array()" line="310" name="commands" /><scope attributes="__ctor__" doc="&#xA;PEAR_Command_Install constructor.&#xA;Access public&#xA;" ilk="function" line="320" lineend="323" name="__construct" signature="__construct(&amp; $ui, &amp; $config)"><variable ilk="argument" line="320" name="ui" /><variable ilk="argument" line="320" name="config" /></scope><scope doc="&#xA;For unit testing purposes&#xA;" ilk="function" line="330" lineend="337" name="getDownloader" returns="a" signature="&amp;getDownloader(&amp; $ui, $options, &amp; $config)"><variable ilk="argument" line="330" name="ui" /><variable ilk="argument" line="330" name="options" /><variable ilk="argument" line="330" name="config" /><variable citdl="PEAR_Downloader" line="335" name="a" /></scope><scope doc="&#xA;For unit testing purposes&#xA;" ilk="function" line="342" lineend="349" name="getInstaller" returns="a" signature="&amp;getInstaller(&amp; $ui)"><variable ilk="argument" line="342" name="ui" /><variable citdl="PEAR_Installer" line="347" name="a" /></scope><scope ilk="function" line="351" lineend="402" name="enableExtension" returns="PEAR.raiseError()" signature="enableExtension($binaries, $type)"><variable ilk="argument" line="351" name="binaries" /><variable ilk="argument" line="351" name="type" /><variable citdl="ob_get_contents()" line="368" name="info" /><variable citdl="binaries[]" line="386" name="binary" /><variable citdl="string" line="362" name="search" /><variable citdl="string" line="363" name="enable" /><variable citdl="ini[]" line="374" name="extension" /><variable citdl="preg_match()" line="371" name="ts" /><variable line="393" name="fp" /><variable citdl="this._parseIni()" line="356" name="ini" /><variable citdl="function_exists()" line="370" name="debug" /><variable citdl="int" line="360" name="line" /><variable citdl="array_slice()" line="382" name="newini" /></scope><scope ilk="function" line="404" lineend="455" name="disableExtension" returns="PEAR.raiseError()" signature="disableExtension($binaries, $type)"><variable ilk="argument" line="404" name="binaries" /><variable ilk="argument" line="404" name="type" /><variable citdl="ob_get_contents()" line="421" name="info" /><variable line="439" name="fp" /><variable citdl="string" line="415" name="search" /><variable citdl="string" line="416" name="enable" /><variable citdl="ini[]" line="428" name="extension" /><variable citdl="preg_match()" line="424" name="ts" /><variable citdl="this._parseIni()" line="409" name="ini" /><variable citdl="function_exists()" line="423" name="debug" /><variable citdl="boolean" line="427" name="found" /><variable citdl="int" line="413" name="line" /><variable citdl="array_slice()" line="444" name="newini" /></scope><scope ilk="function" line="457" lineend="524" name="_parseIni" returns="PEAR.raiseError()" signature="_parseIni($filename)"><variable ilk="argument" line="457" name="filename" /><variable citdl="ob_get_contents()" line="469" name="info" /><variable line="474" name="all" /><variable citdl="ini_get()" line="480" name="extension_dir" /><variable citdl="string" line="473" name="zend_extension_line" /><variable citdl="preg_match()" line="472" name="ts" /><variable citdl="extensions" line="478" name="zend_extensions" /><variable line="481" name="linenum" /><variable citdl="function_exists()" line="471" name="debug" /><variable citdl="trim()" line="492" name="x" /><variable citdl="trim()" line="481" name="line" /></scope><scope doc="&#xA;{{{ doInstall()&#xA;" ilk="function" line="528" lineend="877" name="doInstall" returns="this.raiseError()" signature="doInstall($command, $options, $params)"><variable ilk="argument" line="528" name="command" /><variable ilk="argument" line="528" name="options" /><variable ilk="argument" line="528" name="params" /><variable citdl="reg.packageExists()" line="599" name="exists" /><variable citdl="reg" line="558" name="instreg" /><variable citdl="param.getChannel()" line="796" name="chan" /><variable citdl="param.getPackageFile()" line="592" name="pkg" /><variable citdl="list[]" line="860" name="file" /><variable citdl="this.config.get()" line="563" name="metadata_dir" /><variable citdl="this.installer._prependPath()" line="562" name="packrootphp_dir" /><variable citdl="array()" line="803" name="out" /><variable citdl="downloaded" line="670" name="errors" /><variable citdl="groups[]" line="832" name="group" /><variable citdl="version_compare()" line="601" name="version_compare" /><variable citdl="pinfo" line="780" name="extpath" /><variable citdl="reg.packageInfo()" line="600" name="pversion" /><variable citdl="params[]" line="580" name="param" /><variable citdl="reg.parsedPackageNameToString()" line="802" name="label" /><variable citdl="pkg.fromAnyFile()" line="593" name="pf" /><variable citdl="string" line="779" name="exttype" /><variable citdl="reg.parsedPackageNameToString()" line="858" name="pn" /><variable citdl="this.config.getRegistry()" line="538" name="reg" /><variable line="539" name="channel" /><variable citdl="this.enableExtension()" line="773" name="ret" /><variable citdl="this.installer.install()" line="718" name="info" /><variable citdl="pathinfo()" line="752" name="pinfo" /><variable citdl="info" line="721" name="oldinfo" /><variable citdl="this.downloader.download()" line="671" name="downloaded" /><variable citdl="array_map()" line="576" name="abstractpackages" /><variable citdl="deps" line="827" name="groups" /><variable citdl="instpkg.getFilelist()[]" line="751" name="atts" /><variable citdl="params" line="555" name="packages" /><variable citdl="array()" line="698" name="data" /><variable citdl="count()" line="631" name="count" /><variable citdl="instreg.getPackage()" line="746" name="instpkg" /><variable citdl="string" line="661" name="c" /><variable citdl="reg.parsePackageName()" line="615" name="e" /><variable line="751" name="name" /><variable citdl="array()" line="678" name="err" /><variable citdl="abstractpackages[]" line="632" name="package" /><variable line="632" name="i" /><variable citdl="param.getDeps()" line="824" name="deps" /><variable citdl="errors[]" line="680" name="error" /><variable citdl="extrainfo" line="715" name="binaries" /></scope><variable citdl="this.getInstaller()" line="545" name="installer" /><variable citdl="this.getDownloader()" line="669" name="downloader" /><scope doc="&#xA;}}}&#xA;{{{ doUpgradeAll()&#xA;" ilk="function" line="882" lineend="911" name="doUpgradeAll" signature="doUpgradeAll($command, $options, $params)"><variable ilk="argument" line="882" name="command" /><variable ilk="argument" line="882" name="options" /><variable ilk="argument" line="882" name="params" /><variable citdl="array()" line="885" name="upgrade" /><variable citdl="reg.listPackages()[]" line="899" name="name" /><variable citdl="this.doInstall()" line="907" name="err" /><variable citdl="array()" line="888" name="channels" /><variable citdl="this.config.getRegistry()" line="884" name="reg" /><variable citdl="channels[]" line="893" name="channel" /></scope><scope doc="&#xA;}}}&#xA;{{{ doUninstall()&#xA;" ilk="function" line="916" lineend="1086" name="doUninstall" returns="this.raiseError()" signature="doUninstall($command, $options, $params)"><variable ilk="argument" line="916" name="command" /><variable ilk="argument" line="916" name="options" /><variable ilk="argument" line="916" name="params" /><variable citdl="reg.getInstalledGroup()" line="974" name="installed" /><variable citdl="params[]" line="937" name="pkg" /><variable citdl="reg.parsePackageName()" line="940" name="parsed" /><variable citdl="string" line="1036" name="exttype" /><variable citdl="info.getDependencyGroup()" line="972" name="group" /><variable citdl="preg_match()" line="1043" name="ts" /><variable citdl="this.disableExtension()" line="1030" name="ret" /><variable citdl="this.config.getRegistry()" line="933" name="reg" /><variable citdl="this.config.get()" line="938" name="channel" /><variable citdl="pkg" line="1055" name="savepkg" /><variable citdl="array()" line="934" name="newparams" /><variable citdl="pathinfo()" line="1012" name="pinfo" /><variable line="953" name="testc" /><variable citdl="pkg.getFilelist()[]" line="1011" name="atts" /><variable citdl="reg.getPackage()" line="948" name="info" /><variable citdl="this.config.readFTPConfigFile()" line="927" name="e" /><variable line="1011" name="name" /><variable citdl="this.installer.sortPackagesForUninstall()" line="984" name="err" /><variable citdl="parsed" line="946" name="package" /><variable line="976" name="i" /><variable citdl="array()" line="936" name="badparams" /><variable citdl="installed[]" line="976" name="p" /><variable citdl="function_exists()" line="1042" name="debug" /><variable citdl="array()" line="935" name="binaries" /></scope><scope doc="&#xA;(cox) It just downloads and untars the package, does not do&#xA;        any check that the PEAR_Installer::_installFile() does.&#xA;" ilk="function" line="1098" lineend="1150" name="doBundle" returns="this.raiseError()" signature="doBundle($command, $options, $params)"><variable ilk="argument" line="1098" name="command" /><variable ilk="argument" line="1098" name="options" /><variable ilk="argument" line="1098" name="params" /><variable citdl="pkgfile.getVersion()" line="1138" name="pkgversion" /><variable citdl="pkgfile.getName()" line="1137" name="pkgname" /><variable citdl="Archive_Tar" line="1144" name="tar" /><variable citdl="downloader.setDownloadDir()" line="1123" name="err" /><variable citdl="this.getDownloader()" line="1106" name="downloader" /><variable citdl="realpath()" line="1116" name="dest" /><variable citdl="result" line="1136" name="pkgfile" /><variable citdl="getcwd()" line="1118" name="pwd" /><variable citdl="array()" line="1105" name="opts" /><variable citdl="pkgname" line="1142" name="orig" /><variable citdl="this.config.getRegistry()" line="1107" name="reg" /><variable citdl="pwd" line="1119" name="dir" /><variable citdl="downloader.download()" line="1129" name="result" /></scope><scope doc="&#xA;}}}&#xA;" ilk="function" line="1154" lineend="1177" name="doRunScripts" returns="this.raiseError()" signature="doRunScripts($command, $options, $params)"><variable ilk="argument" line="1154" name="command" /><variable ilk="argument" line="1154" name="options" /><variable ilk="argument" line="1154" name="params" /><variable citdl="reg.getPackage()" line="1168" name="package" /><variable citdl="this.config.getRegistry()" line="1160" name="reg" /><variable citdl="reg.parsePackageName()" line="1162" name="parsed" /></scope><scope doc="&#xA;Given a list of packages, filter out those ones that are already up to date&#xA;&lt;$packages:&gt; packages,  - in parsed array format !&#xA;Returns list  - of packages that can be upgraded&#xA;" ilk="function" line="1185" lineend="1272" name="_filterUptodatePackages" returns="list" signature="list _filterUptodatePackages($packages, $command)"><variable ilk="argument" line="1185" name="packages" /><variable ilk="argument" line="1185" name="command" /><variable citdl="latestReleases" line="1256" name="channel_version" /><variable citdl="package" line="1198" name="name" /><variable citdl="packages[]" line="1191" name="package" /><variable citdl="reg.getChannel()" line="1206" name="chan" /><variable citdl="this.config.get()" line="1224" name="state" /><variable citdl="array()" line="1190" name="ret" /><variable citdl="array_flip()" line="1237" name="installed" /><variable citdl="strtolower()" line="1252" name="name_lower" /><variable citdl="boolean" line="1211" name="base2" /><variable citdl="base2" line="1232" name="base" /><variable citdl="array()" line="1188" name="latestReleases" /><variable citdl="rest.listLatestUpgrades()" line="1238" name="latest" /><variable citdl="reg.packageInfo()" line="1255" name="inst_version" /><variable citdl="this.config.getREST()" line="1231" name="rest" /><variable citdl="this.config.get()" line="1212" name="preferred_mirror" /><variable citdl="this.config.getRegistry()" line="1187" name="reg" /><variable citdl="package" line="1197" name="channel" /><variable citdl="boolean" line="1219" name="dorest" /></scope></scope></scope>
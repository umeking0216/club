<scope ilk="blob" lang="PHP" name="rw.php" src="/usr/share/pear/PEAR/Task/Postinstallscript/rw.php"><import line="18" module="PEAR/Task/Postinstallscript.php" /><scope classrefs="PEAR_Task_Postinstallscript" doc="Abstracts the postinstallscript file task xml.&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a10" ilk="class" line="30" lineend="182" name="PEAR_Task_Postinstallscript_rw"><variable attributes="public" citdl="PEAR_PackageFile_v2_rw" doc="parent package file object&#xA;&#xA;@var PEAR_PackageFile_v2_rw" line="37" name="_pkg" /><scope attributes="__ctor__" doc="&#xA;Enter description here...&#xA;&lt;pear_packagefile_v2_rw&gt; $pkg  - Package&#xA;&lt;pear_config&gt; $config  - Config&#xA;&lt;pear_frontend&gt; $logger  - Logger&#xA;&lt;array&gt; $fileXml  - XML&#xA;Returns pear_task_postinstallscript_rw &#xA;" ilk="function" line="48" lineend="54" name="__construct" returns="PEAR_Task_Postinstallscript_rw" signature="pear_task_postinstallscript_rw __construct(PEAR_PackageFile_v2_rw &amp; $pkg, PEAR_Config &amp; $config, PEAR_Frontend &amp; $logger, array $fileXml)"><variable citdl="PEAR_PackageFile_v2_rw" ilk="argument" line="48" name="pkg" /><variable citdl="PEAR_Config" ilk="argument" line="48" name="config" /><variable citdl="PEAR_Frontend" ilk="argument" line="48" name="logger" /><variable citdl="array" ilk="argument" line="48" name="fileXml" /></scope><variable citdl="fileXml" line="51" name="_contents" /><variable citdl="array()" line="53" name="_params" /><scope attributes="public" ilk="function" line="56" lineend="59" name="validate" returns="this.validateXml()" signature="validate()" /><scope attributes="public" ilk="function" line="61" lineend="64" name="getName" returns="string" signature="getName()" /><scope attributes="public" doc="&#xA;add a simple &lt;paramgroup&gt; to the post-install script&#xA;Order is significant, so call this method in the same&#xA;sequence the users should see the paramgroups.  The $params&#xA;parameter should either be the result of a call to {@link getParam()}&#xA;or an array of calls to getParam().&#xA;Use {@link addConditionTypeGroup()} to add a &lt;paramgroup&gt; containing&#xA;a &lt;conditiontype&gt; tag&#xA;&lt;string&gt; $id  - &lt;paramgroup&gt; id as seen by the script&#xA;&lt;array|false&gt; $params  - array of getParam() calls, or false for no params&#xA;&lt;string|false&gt; $instructions  - &#xA;" ilk="function" line="81" lineend="97" name="addParamGroup" signature="addParamGroup(string $id, $params = false, $instructions = false)"><variable citdl="string" ilk="argument" line="81" name="id" /><variable default="false" ilk="argument" line="81" name="params" /><variable default="false" ilk="argument" line="81" name="instructions" /><variable citdl="array()" line="89" name="stuff" /></scope><scope attributes="public" doc="&#xA;Add a complex &lt;paramgroup&gt; to the post-install script with conditions&#xA;This inserts a &lt;paramgroup&gt; with&#xA;Order is significant, so call this method in the same&#xA;sequence the users should see the paramgroups.  The $params&#xA;parameter should either be the result of a call to {@link getParam()}&#xA;or an array of calls to getParam().&#xA;Use {@link addParamGroup()} to add a simple &lt;paramgroup&gt;&#xA;&lt;string&gt; $id  - &lt;paramgroup&gt; id as seen by the script&#xA;&lt;string&gt; $oldgroup  - &lt;paramgroup&gt; id of the section referenced by&#xA;                                   &lt;conditiontype&gt;&#xA;&lt;string&gt; $param  - name of the &lt;param&gt; from the older section referenced&#xA;                                   by &lt;contitiontype&gt;&#xA;&lt;string&gt; $value  - value to match of the parameter&#xA;&lt;string&gt; $conditiontype  - one of &apos;=&apos;, &apos;!=&apos;, &apos;preg_match&apos;&#xA;&lt;array|false&gt; $params  - array of getParam() calls, or false for no params&#xA;&lt;string|false&gt; $instructions  - &#xA;" ilk="function" line="121" lineend="145" name="addConditionTypeGroup" signature="addConditionTypeGroup(string $id, string $oldgroup, string $param, string $value, string $conditiontype = &apos;=&apos;, $params = false, $instructions = false)"><variable citdl="string" ilk="argument" line="121" name="id" /><variable citdl="string" ilk="argument" line="121" name="oldgroup" /><variable citdl="string" ilk="argument" line="121" name="param" /><variable citdl="string" ilk="argument" line="121" name="value" /><variable citdl="string" default="&apos;=&apos;" ilk="argument" line="121" name="conditiontype" /><variable default="false" ilk="argument" line="121" name="params" /><variable default="false" ilk="argument" line="121" name="instructions" /><variable citdl="array()" line="134" name="stuff" /></scope><scope attributes="public" ilk="function" line="147" lineend="150" name="getXml" returns="this._params" signature="getXml()" /><scope attributes="public" doc="&#xA;Use to set up a param tag for use in creating a paramgroup&#xA;&lt;mixed&gt; $name  - Name of parameter&#xA;&lt;mixed&gt; $prompt  - Prompt&#xA;&lt;string&gt; $type  - Type, defaults to &apos;string&apos;&#xA;&lt;mixed&gt; $default  - Default value&#xA;Returns array &#xA;" ilk="function" line="162" lineend="181" name="getParam" returns="array" signature="array getParam(mixed $name, mixed $prompt, string $type = &apos;string&apos;, mixed $default = null)"><variable citdl="mixed" ilk="argument" line="162" name="name" /><variable citdl="mixed" ilk="argument" line="162" name="prompt" /><variable citdl="string" default="&apos;string&apos;" ilk="argument" line="162" name="type" /><variable citdl="mixed" default="null" ilk="argument" line="162" name="default" /></scope></scope></scope>
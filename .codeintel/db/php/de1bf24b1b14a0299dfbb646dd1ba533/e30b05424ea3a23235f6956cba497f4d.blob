<scope ilk="blob" lang="PHP" name="10.php" src="/usr/share/pear/PEAR/REST/10.php"><import line="19" module="PEAR/REST.php" /><import line="612" module="PEAR/PackageFile/v2.php" /><import line="755" module="PEAR/PackageFile/v2.php" /><scope doc="Implement REST 1.0&#xA;&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a12" ilk="class" line="33" lineend="870" name="PEAR_REST_10"><variable citdl="PEAR_REST" doc="@var PEAR_REST" line="38" name="_rest" /><scope attributes="__ctor__" ilk="function" line="39" lineend="42" name="__construct" signature="__construct($config, $options = array())"><variable ilk="argument" line="39" name="config" /><variable default="array()" ilk="argument" line="39" name="options" /></scope><scope doc="&#xA;Retrieve information about a remote package to be downloaded from a REST server&#xA;&lt;string&gt; $base  - The uri to prepend to all REST calls&#xA;&lt;array&gt; $packageinfo  - an array of format:&#xA;&lt;pre&gt;&#xA; array(&#xA;  &apos;package&apos; =&gt; &apos;packagename&apos;,&#xA;  &apos;channel&apos; =&gt; &apos;channelname&apos;,&#xA; [&apos;state&apos; =&gt; &apos;alpha&apos; (or valid state),]&#xA; -or-&#xA; [&apos;version&apos; =&gt; &apos;1.whatever&apos;]&#xA;&lt;/pre&gt;&#xA;&lt;string&gt; $prefstate  - Current preferred_state config variable value&#xA;&lt;bool&gt; $installed  - the installed version of this package to compare against&#xA;Returns array|false|pear_error  - see {@link _returnDownloadURL()}&#xA;" ilk="function" line="61" lineend="121" name="getDownloadURL" returns="array" signature="array getDownloadURL(string $base, array $packageinfo, string $prefstate, bool $installed, $channel = false)"><variable citdl="string" ilk="argument" line="61" name="base" /><variable citdl="array" ilk="argument" line="61" name="packageinfo" /><variable citdl="string" ilk="argument" line="61" name="prefstate" /><variable citdl="bool" ilk="argument" line="61" name="installed" /><variable default="false" ilk="argument" line="61" name="channel" /><variable citdl="base" line="72" name="restFile" /><variable citdl="this._rest.retrieveData()" line="74" name="info" /><variable citdl="packageinfo" line="69" name="package" /><variable citdl="this.betterStates()" line="63" name="states" /><variable line="70" name="state" /><variable line="71" name="version" /><variable citdl="found" line="84" name="release" /><variable citdl="boolean" line="98" name="found" /></scope><scope ilk="function" line="123" lineend="243" name="getDepDownloadURL" returns="PEAR.raiseError()" signature="getDepDownloadURL($base, $xsdversion, $dependency, $deppackage, $prefstate = &apos;stable&apos;, $installed = false, $channel = false)"><variable ilk="argument" line="123" name="base" /><variable ilk="argument" line="123" name="xsdversion" /><variable ilk="argument" line="123" name="dependency" /><variable ilk="argument" line="123" name="deppackage" /><variable default="&apos;stable&apos;" ilk="argument" line="123" name="prefstate" /><variable default="false" ilk="argument" line="123" name="installed" /><variable default="false" ilk="argument" line="123" name="channel" /><variable citdl="base" line="135" name="restFile" /><variable citdl="this._rest.retrieveData()" line="137" name="info" /><variable citdl="dependency" line="132" name="package" /><variable citdl="boolean" line="238" name="found" /><variable citdl="dependency" line="162" name="max" /><variable citdl="dependency" line="148" name="min" /><variable citdl="dependency" line="159" name="recommended" /><variable citdl="this.betterStates()" line="126" name="states" /><variable line="133" name="state" /><variable line="134" name="version" /><variable citdl="release[]" line="200" name="entry" /><variable citdl="found" line="183" name="release" /><variable citdl="array()" line="147" name="exclude" /></scope><scope doc="&#xA;Take raw data and return the array needed for processing a download URL&#xA;&lt;string&gt; $base  - REST base uri&#xA;&lt;string&gt; $package  - Package name&#xA;&lt;array&gt; $release  - an array of format array(&apos;v&apos; =&gt; version, &apos;s&apos; =&gt; state)&#xA;                      describing the release to download&#xA;&lt;array&gt; $info  - list of all releases as defined by allreleases.xml&#xA;&lt;bool|null&gt; $found  - determines whether the release was found or this is the next&#xA;                   best alternative.  If null, then versions were skipped because&#xA;                   of PHP dependency&#xA;Returns array|pear_error &#xA;Access private&#xA;" ilk="function" line="259" lineend="364" name="_returnDownloadURL" returns="array" signature="array _returnDownloadURL(string $base, string $package, array $release, array $info, $found, $phpversion = false, $channel = false)"><variable citdl="string" ilk="argument" line="259" name="base" /><variable citdl="string" ilk="argument" line="259" name="package" /><variable citdl="array" ilk="argument" line="259" name="release" /><variable citdl="array" ilk="argument" line="259" name="info" /><variable ilk="argument" line="259" name="found" /><variable default="false" ilk="argument" line="259" name="phpversion" /><variable default="false" ilk="argument" line="259" name="channel" /><variable citdl="array()" line="355" name="return" /><variable citdl="array()" line="337" name="deprecated" /><variable citdl="this._rest.retrieveCacheFirst()" line="281" name="packagexml" /><variable citdl="this._rest.retrieveData()" line="293" name="allinfo" /><variable citdl="strtolower()" line="265" name="packageLower" /><variable citdl="boolean" line="302" name="compatible" /><variable citdl="this._rest.retrieveCacheFirst()" line="267" name="pinfo" /><variable citdl="this._rest.retrieveCacheFirst()" line="274" name="releaseinfo" /><variable citdl="array()" line="318" name="comp" /><variable citdl="release[]" line="317" name="entry" /></scope><scope ilk="function" line="366" lineend="382" name="listPackages" returns="packagelist" signature="listPackages($base, $channel = false)"><variable ilk="argument" line="366" name="base" /><variable default="false" ilk="argument" line="366" name="channel" /><variable citdl="this._rest.retrieveData()" line="368" name="packagelist" /></scope><scope doc="&#xA;List all categories of a REST server&#xA;&lt;string&gt; $base  - base URL of the server&#xA;Returns array  - of categorynames&#xA;" ilk="function" line="390" lineend="425" name="listCategories" returns="array" signature="array listCategories(string $base, $channel = false)"><variable citdl="string" ilk="argument" line="390" name="base" /><variable default="false" ilk="argument" line="390" name="channel" /><variable citdl="this._rest.retrieveData()" line="397" name="packagelist" /><variable citdl="packagelist[]" line="412" name="package" /><variable citdl="array()" line="403" name="ret" /><variable citdl="inf" line="418" name="cat" /><variable citdl="this._rest.retrieveData()" line="413" name="inf" /><variable citdl="array()" line="392" name="categories" /></scope><scope doc="&#xA;List a category of a REST server&#xA;&lt;string&gt; $base  - base URL of the server&#xA;&lt;string&gt; $category  - name of the category&#xA;&lt;boolean&gt; $info  - also download full package info&#xA;Returns array  - of packagenames&#xA;" ilk="function" line="435" lineend="479" name="listCategory" returns="array" signature="array listCategory(string $base, string $category, boolean $info = false, $channel = false)"><variable citdl="string" ilk="argument" line="435" name="base" /><variable citdl="string" ilk="argument" line="435" name="category" /><variable citdl="boolean" default="false" ilk="argument" line="435" name="info" /><variable default="false" ilk="argument" line="435" name="channel" /><variable line="457" name="i" /><variable citdl="sprintf()" line="460" name="url" /><variable citdl="this._rest.retrieveData()" line="438" name="packagelist" /><variable citdl="this._rest.retrieveData()" line="461" name="version" /><variable citdl="packagelist[]" line="457" name="packageitem" /></scope><scope ilk="function" line="482" lineend="648" name="listAll" returns="packagelist" signature="listAll($base, $dostable, $basic = true, $searchpackage = false, $searchsummary = false, $channel = false)"><variable ilk="argument" line="482" name="base" /><variable ilk="argument" line="482" name="dostable" /><variable default="true" ilk="argument" line="482" name="basic" /><variable default="false" ilk="argument" line="482" name="searchpackage" /><variable default="false" ilk="argument" line="482" name="searchsummary" /><variable default="false" ilk="argument" line="482" name="channel" /><variable citdl="array()" line="535" name="info" /><variable citdl="PEAR_PackageFile_v2" line="615" name="pf" /><variable citdl="this._rest.retrieveData()" line="484" name="packagelist" /><variable citdl="this._rest.retrieveCacheFirst()" line="606" name="d" /><variable citdl="this._rest.retrieveData()" line="552" name="releases" /><variable citdl="packagelist[]" line="503" name="package" /><variable citdl="tdeps[]" line="622" name="dep" /><variable attributes="__not_yet_defined__" citdl="release" line="561" name="stable" /><variable citdl="array()" line="492" name="ret" /><variable citdl="int" line="511" name="next" /><variable citdl="array()" line="502" name="newpackagelist" /><variable attributes="__not_yet_defined__" citdl="stable" line="560" name="unstable" /><variable attributes="__not_yet_defined__" citdl="release" line="562" name="state" /><variable citdl="pf.getDeps()" line="618" name="tdeps" /><variable citdl="PEAR_Frontend.singleton()" line="489" name="ui" /><variable citdl="array()" line="591" name="deps" /><variable line="543" name="found" /><variable citdl="releases[]" line="563" name="release" /><variable line="512" name="progress" /><variable citdl="this._rest.retrieveData()" line="537" name="inf" /><variable citdl="unstable" line="527" name="latest" /></scope><scope ilk="function" line="650" lineend="738" name="listLatestUpgrades" returns="packagelist" signature="listLatestUpgrades($base, $pref_state, $installed, $channel, &amp; $reg)"><variable ilk="argument" line="650" name="base" /><variable ilk="argument" line="650" name="pref_state" /><variable ilk="argument" line="650" name="installed" /><variable ilk="argument" line="650" name="channel" /><variable ilk="argument" line="650" name="reg" /><variable citdl="this._rest.retrieveData()" line="675" name="info" /><variable citdl="this._rest.retrieveData()" line="652" name="packagelist" /><variable citdl="release" line="704" name="new_state" /><variable citdl="packagelist[]" line="666" name="package" /><variable citdl="array()" line="657" name="ret" /><variable citdl="reg.packageInfo()" line="672" name="inst_state" /><variable citdl="this._rest.retrieveCacheFirst()" line="725" name="relinfo" /><variable citdl="boolean" line="701" name="found" /><variable citdl="found" line="685" name="release" /><variable citdl="reg.packageInfo()" line="671" name="inst_version" /></scope><scope ilk="function" line="740" lineend="826" name="packageInfo" returns="PEAR.raiseError()" signature="packageInfo($base, $package, $channel = false)"><variable ilk="argument" line="740" name="base" /><variable ilk="argument" line="740" name="package" /><variable default="false" ilk="argument" line="740" name="channel" /><variable citdl="this._rest.retrieveCacheFirst()" line="777" name="info" /><variable citdl="array()" line="750" name="releases" /><variable citdl="array()" line="802" name="deprecated" /><variable citdl="this._rest.retrieveData()" line="743" name="pinfo" /><variable citdl="PEAR_PackageFile_v2" line="762" name="pf" /><variable citdl="this._rest.retrieveData()" line="752" name="allreleases" /><variable citdl="allreleases[]" line="763" name="release" /><variable citdl="this._rest.retrieveCacheFirst()" line="765" name="ds" /><variable citdl="string" line="771" name="latest" /></scope><scope doc="&#xA;Return an array containing all of the states that are more stable than&#xA;or equal to the passed in state&#xA;&lt;string&gt; Release  - state&#xA;&lt;boolean&gt; Determines  - whether to include $state in the list&#xA;Returns false|array  - False if $state is not a valid release state&#xA;" ilk="function" line="836" lineend="849" name="betterStates" returns="false" signature="false betterStates($state, $include = false)"><variable ilk="argument" line="836" name="state" /><variable default="false" ilk="argument" line="836" name="include" /><variable citdl="array_search()" line="839" name="i" /></scope><variable attributes="static" citdl="array()" line="838" name="states" /><scope doc="&#xA;Sort releases by version number&#xA;Access private&#xA;" ilk="function" line="856" lineend="869" name="_sortReleasesByVersionNumber" returns="int" signature="_sortReleasesByVersionNumber($a, $b)"><variable ilk="argument" line="856" name="a" /><variable ilk="argument" line="856" name="b" /></scope></scope></scope>
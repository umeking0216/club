<scope ilk="blob" lang="PHP" name="Common.php" src="/usr/share/pear/PEAR/Task/Common.php"><import line="203" module="PEAR.php" /><variable citdl="int" ilk="constant" line="18" name="PEAR_TASK_ERROR_NOATTRIBS" /><variable citdl="int" ilk="constant" line="19" name="PEAR_TASK_ERROR_MISSING_ATTRIB" /><variable citdl="int" ilk="constant" line="20" name="PEAR_TASK_ERROR_WRONG_ATTRIB_VALUE" /><variable citdl="int" ilk="constant" line="21" name="PEAR_TASK_ERROR_INVALID" /><variable citdl="int" ilk="constant" line="23" name="PEAR_TASK_PACKAGE" /><variable citdl="int" ilk="constant" line="24" name="PEAR_TASK_INSTALL" /><variable citdl="int" ilk="constant" line="25" name="PEAR_TASK_PACKAGEANDINSTALL" /><scope doc="A task is an operation that manipulates the contents of a file.&#xA;&#xA;Simple tasks operate on 1 file.  Multiple tasks are executed after all files have been&#xA;processed and installed, and are designed to operate on all files containing the task.&#xA;The Post-install script task simply takes advantage of the fact that it will be run&#xA;after installation, replace is a simple task.&#xA;&#xA;Combining tasks is possible, but ordering is significant.&#xA;&#xA;&lt;file name=&quot;test.php&quot; role=&quot;php&quot;&gt;&#xA; &lt;tasks:replace from=&quot;@data-dir@&quot; to=&quot;data_dir&quot; type=&quot;pear-config&quot;/&gt;&#xA; &lt;tasks:postinstallscript/&gt;&#xA;&lt;/file&gt;&#xA;&#xA;This will first replace any instance of @data-dir@ in the test.php file&#xA;with the path to the current data directory.  Then, it will include the&#xA;test.php file and run the script it contains to configure the package post-installation.&#xA;&#xA;@category  pear&#xA;@package   PEAR&#xA;@author    Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright 1997-2009 The Authors&#xA;@license   http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version   Release: 1.10.12&#xA;@link      http://pear.php.net/package/PEAR&#xA;@since     Class available since Release 1.4.0a1&#xA;@abstract" ilk="class" line="55" lineend="207" name="PEAR_Task_Common"><variable attributes="protected" citdl="string" line="68" name="type" /><variable attributes="public" citdl="PEAR_TASK_INSTALL" line="72" name="phase" /><variable attributes="protected" citdl="config" line="76" name="config" /><variable attributes="protected" citdl="config.getRegistry()" line="80" name="registry" /><variable attributes="public" citdl="logger" line="84" name="logger" /><variable attributes="protected" citdl="phase" line="88" name="installphase" /><scope attributes="__ctor__" doc="@param PEAR_Config&#xA;@param PEAR_Common" ilk="function" line="93" lineend="102" name="__construct" signature="__construct(&amp; $config, &amp; $logger, $phase)"><variable ilk="argument" line="93" name="config" /><variable ilk="argument" line="93" name="logger" /><variable ilk="argument" line="93" name="phase" /></scope><scope attributes="public static" doc="Validate the basic contents of a task tag.&#xA;&#xA;@param PEAR_PackageFile_v2&#xA;@param array&#xA;@param PEAR_Config&#xA;@param array the entire parsed &lt;file&gt; tag&#xA;&#xA;@return true|array On error, return an array in format:&#xA;                   array(PEAR_TASK_ERROR_???[, param1][, param2][, ...])&#xA;&#xA;For PEAR_TASK_ERROR_MISSING_ATTRIB, pass the attribute name in&#xA;For PEAR_TASK_ERROR_WRONG_ATTRIB_VALUE, pass the attribute name and&#xA;an array of legal values in&#xA;&#xA;@abstract" ilk="function" line="121" lineend="123" name="validateXml" returns="true" signature="true validateXml($pkg, $xml, $config, $fileXml)"><variable ilk="argument" line="121" name="pkg" /><variable ilk="argument" line="121" name="xml" /><variable ilk="argument" line="121" name="config" /><variable ilk="argument" line="121" name="fileXml" /></scope><scope attributes="public" doc="&#xA;Initialize a task instance with the parameters&#xA;&lt;array&gt; raw,  - parsed xml&#xA;&lt;array&gt; attributes  - from the &lt;file&gt; tag containing this task&#xA;&lt;string|null&gt; last  - installed version of this package&#xA;Abstract&#xA;" ilk="function" line="133" lineend="135" name="init" signature="init($xml, $fileAttributes, $lastVersion)"><variable ilk="argument" line="133" name="xml" /><variable ilk="argument" line="133" name="fileAttributes" /><variable ilk="argument" line="133" name="lastVersion" /></scope><scope attributes="public" doc="Begin a task processing session.  All multiple tasks will be processed&#xA;after each file has been successfully installed, all simple tasks should&#xA;perform their task here and return any errors using the custom&#xA;throwError() method to allow forward compatibility&#xA;&#xA;This method MUST NOT write out any changes to disk&#xA;&#xA;@param    PEAR_PackageFile_v2&#xA;@param    string file contents&#xA;@param    string the eventual final file location (informational only)&#xA;@return   string|false|PEAR_Error false to skip this file, PEAR_Error to fail&#xA;          (use $this-&gt;throwError), otherwise return the new contents&#xA;@abstract" ilk="function" line="152" lineend="154" name="startSession" returns="string" signature="string startSession($pkg, $contents, $dest)"><variable ilk="argument" line="152" name="pkg" /><variable ilk="argument" line="152" name="contents" /><variable ilk="argument" line="152" name="dest" /></scope><scope attributes="public static" doc="&#xA;This method is used to process each of the tasks for a particular&#xA;multiple class type.  Simple tasks need not implement this method.&#xA;&lt;array&gt; an  - array of tasks&#xA;Access   protected&#xA;" ilk="function" line="163" lineend="165" name="run" signature="run($tasks)"><variable ilk="argument" line="163" name="tasks" /></scope><scope attributes="public static" doc="&#xA;Final&#xA;" ilk="function" line="170" lineend="173" name="hasPostinstallTasks" signature="hasPostinstallTasks()" /><scope attributes="public static" doc="&#xA;Final&#xA;" ilk="function" line="178" lineend="190" name="runPostinstallTasks" returns="PEAR_Task_Common.throwError()" signature="runPostinstallTasks()"><variable attributes="__not_yet_defined__" line="189" name="GLOBALS" /><variable citdl="GLOBALS[]" line="180" name="tasks" /><variable line="180" name="class" /><variable citdl="call_user_func()" line="184" name="err" /></scope><scope attributes="public" doc="&#xA;Determines whether a role is a script&#xA;Returns bool &#xA;" ilk="function" line="196" lineend="199" name="isScript" returns="bool" signature="bool isScript()" /><scope attributes="public" ilk="function" line="201" lineend="206" name="throwError" returns="PEAR.raiseError()" signature="throwError($msg, $code = -1)"><variable ilk="argument" line="201" name="msg" /><variable default="-1" ilk="argument" line="201" name="code" /></scope></scope></scope>
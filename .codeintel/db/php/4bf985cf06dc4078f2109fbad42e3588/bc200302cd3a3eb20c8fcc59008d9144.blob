<scope ilk="blob" lang="PHP" name="Package.php" src="/usr/share/pear/PEAR/Downloader/Package.php"><import line="736" module="PEAR/Dependency2.php" /><import line="1115" module="PEAR/Dependency2.php" /><import line="1571" module="Archive/Tar.php" /><import line="1829" module="PEAR/Common.php" /><import line="1845" module="PEAR/Dependency2.php" /><import line="1896" module="PEAR/Common.php" /><import line="1912" module="PEAR/Dependency2.php" /><variable ilk="constant" line="20" name="PEAR_DOWNLOADER_PACKAGE_STATE" /><variable ilk="constant" line="25" name="PEAR_DOWNLOADER_PACKAGE_PHPVERSION" /><scope doc="Coordinates download parameters and manages their dependencies&#xA;prior to downloading them.&#xA;&#xA;Input can come from three sources:&#xA;&#xA;- local files (archives or package.xml)&#xA;- remote files (downloadable urls)&#xA;- abstract package names&#xA;&#xA;The first two elements are handled cleanly by PEAR_PackageFile, but the third requires&#xA;accessing pearweb&apos;s xml-rpc interface to determine necessary dependencies, and the&#xA;format returned of dependencies is slightly different from that used in package.xml.&#xA;&#xA;This class hides the differences between these elements, and makes automatic&#xA;dependency resolution a piece of cake.  It also manages conflicts when&#xA;two classes depend on incompatible dependencies, or differing versions of the same&#xA;package dependency.  In addition, download will not be attempted if the php version is&#xA;not supported, PEAR installer version is not supported, or non-PECL extensions are not&#xA;installed.&#xA;@category   pear&#xA;@package    PEAR&#xA;@author     Greg Beaver &lt;cellog@php.net&gt;&#xA;@copyright  1997-2009 The Authors&#xA;@license    http://opensource.org/licenses/bsd-license.php New BSD License&#xA;@version    Release: 1.10.12&#xA;@link       http://pear.php.net/package/PEAR&#xA;@since      Class available since Release 1.4.0a1" ilk="class" line="56" lineend="1981" name="PEAR_Downloader_Package"><variable citdl="PEAR_Downloader" doc="@var PEAR_Downloader" line="61" name="_downloader" /><variable citdl="PEAR_Config" doc="@var PEAR_Config" line="65" name="_config" /><variable citdl="PEAR_Registry" doc="@var PEAR_Registry" line="69" name="_registry" /><variable citdl="PEAR_Registry" doc="Used to implement packagingroot properly&#xA;@var PEAR_Registry" line="74" name="_installRegistry" /><variable citdl="PEAR_PackageFile_v1" doc="@var PEAR_PackageFile_v1|PEAR_PackageFile|v2" line="78" name="_packagefile" /><variable citdl="array" doc="@var array" line="82" name="_parsedname" /><variable citdl="array" doc="@var array" line="86" name="_downloadURL" /><variable citdl="array" doc="@var array" line="90" name="_downloadDeps" /><variable citdl="boolean" doc="@var boolean" line="94" name="_valid" /><variable citdl="boolean" doc="@var boolean" line="98" name="_analyzed" /><variable citdl="string" doc="if this or a parent package was invoked with Package-state, this is set to the&#xA;state variable.&#xA;&#xA;This allows temporary reassignment of preferred_state for a parent package and all of&#xA;its dependencies.&#xA;@var string|false" line="107" name="_explicitState" /><variable citdl="boolean" line="111" name="_explicitGroup" /><variable citdl="string" doc="Package type local|url&#xA;@var string" line="116" name="_type" /><variable citdl="string" doc="Contents of package.xml, if downloaded from a remote channel&#xA;@var string|false&#xA;@access private" line="122" name="_rawpackagefile" /><variable citdl="boolean" doc="@var boolean&#xA;@access private" line="127" name="_validated" /><scope attributes="__ctor__" doc="@param PEAR_Downloader" ilk="function" line="132" lineend="146" name="__construct" signature="__construct(&amp; $downloader)"><variable ilk="argument" line="132" name="downloader" /><variable citdl="downloader.getOptions()" line="137" name="options" /></scope><scope doc="Parse the input and determine whether this is a local file, a remote uri, or an&#xA;abstract package name.&#xA;&#xA;This is the heart of the PEAR_Downloader_Package(), and is used in&#xA;{@link PEAR_Downloader::download()}&#xA;@param string&#xA;@return bool|PEAR_Error" ilk="function" line="157" lineend="242" name="initialize" returns="bool" signature="bool initialize($param)"><variable ilk="argument" line="157" name="param" /><variable citdl="origErr.getUserInfo()[]" line="167" name="userInfo" /><variable citdl="this._downloader.getOptions()" line="164" name="options" /><variable citdl="this._fromUrl()" line="179" name="err" /><variable citdl="this._fromFile()" line="159" name="origErr" /></scope><scope doc="&#xA;Retrieve any non-local packages&#xA;Returns pear_packagefile_v1|pear_packagefile_v2|pear_error &#xA;" ilk="function" line="248" lineend="299" name="download" returns="PEAR_PackageFile_v1" signature="pear_packagefile_v1 &amp;download()"><variable citdl="this.getParsedPackage()" line="256" name="info" /><variable line="257" name="i" /><variable citdl="this.getParsedPackage()" line="263" name="newinfo" /><variable citdl="this._fromUrl()" line="262" name="err" /><variable citdl="info[]" line="257" name="p" /></scope><variable citdl="boolean" line="255" name="_isvalid" /><scope ilk="function" line="301" lineend="304" name="getPackageFile" returns="this._packagefile" signature="&amp;getPackageFile()" /><scope ilk="function" line="306" lineend="309" name="getDownloader" returns="this._downloader" signature="&amp;getDownloader()" /><scope ilk="function" line="311" lineend="314" name="getType" returns="this._type" signature="getType()" /><scope doc="&#xA;Like {@link initialize()}, but operates on a dependency&#xA;" ilk="function" line="319" lineend="355" name="fromDepURL" returns="PEAR.raiseError()" signature="fromDepURL($dep)"><variable ilk="argument" line="319" name="dep" /><variable citdl="string" line="325" name="ext" /><variable citdl="this._downloader.getOptions()" line="323" name="options" /><variable citdl="this._fromUrl()" line="331" name="err" /></scope><scope ilk="function" line="357" lineend="384" name="detectDependencies" returns="this._detect2()" signature="detectDependencies($params)"><variable ilk="argument" line="357" name="params" /><variable citdl="this.getParsedPackage()" line="369" name="pname" /><variable citdl="this._downloader.getOptions()" line="359" name="options" /><variable citdl="this.getDeps()" line="374" name="deps" /></scope><scope ilk="function" line="386" lineend="389" name="setValidated" signature="setValidated()" /><scope ilk="function" line="391" lineend="394" name="alreadyValidated" returns="this._validated" signature="alreadyValidated()" /><scope attributes="public static" doc="&#xA;Remove packages to be downloaded that are already installed&#xA;&lt;array&gt; of  - PEAR_Downloader_Package objects&#xA;" ilk="function" line="400" lineend="440" name="removeInstalled" signature="removeInstalled(&amp; $params)"><variable ilk="argument" line="400" name="params" /><variable citdl="param.getParsedPackage()" line="417" name="info" /><variable citdl="param.getPackage()" line="409" name="package" /><variable line="408" name="i" /><variable citdl="params[]" line="408" name="param" /><variable citdl="param._installRegistry.packageInfo()" line="414" name="packageVersion" /><variable citdl="params" line="406" name="options" /><variable citdl="param.getChannel()" line="410" name="channel" /></scope><scope ilk="function" line="442" lineend="605" name="_detect2" signature="_detect2($deps, $pname, $options, $params)"><variable ilk="argument" line="442" name="deps" /><variable ilk="argument" line="442" name="pname" /><variable ilk="argument" line="442" name="options" /><variable ilk="argument" line="442" name="params" /><variable citdl="deps" line="547" name="group" /><variable citdl="boolean" line="445" name="groupnotfound" /><variable citdl="deps[]" line="450" name="dep" /><variable citdl="boolean" line="484" name="skip" /><variable citdl="this._explicitGroup" line="531" name="explicit" /><variable citdl="this._detect2Dep()" line="455" name="ret" /><variable citdl="this.getGroup()" line="530" name="groupname" /><variable citdl="array()[]" line="446" name="packagetype" /><variable citdl="boolean" line="559" name="found" /><variable citdl="array()" line="478" name="skipnames" /></scope><scope ilk="function" line="607" lineend="684" name="_detect2Dep" returns="boolean" signature="_detect2Dep($dep, $pname, $group, $params)"><variable ilk="argument" line="607" name="dep" /><variable ilk="argument" line="607" name="pname" /><variable ilk="argument" line="607" name="group" /><variable ilk="argument" line="607" name="params" /><variable citdl="string" line="657" name="oper" /><variable citdl="dep" line="618" name="testdep" /><variable citdl="this._analyzeDownloadURL()" line="645" name="ret" /><variable citdl="this._downloader._getDepPackageDownloadUrl()" line="637" name="url" /><variable citdl="this._installRegistry.packageInfo()" line="666" name="version" /><variable citdl="this._downloader.getOptions()" line="613" name="options" /></scope><scope ilk="function" line="686" lineend="882" name="_detect1" returns="url" signature="_detect1($deps, $pname, $options, $params)"><variable ilk="argument" line="686" name="deps" /><variable ilk="argument" line="686" name="pname" /><variable ilk="argument" line="686" name="options" /><variable ilk="argument" line="686" name="params" /><variable citdl="PEAR_PackageFile_v1" line="712" name="fakedp" /><variable citdl="boolean" line="691" name="nodownload" /><variable line="704" name="group" /><variable citdl="PEAR_Dependency2.normalizeDep()" line="739" name="newdep" /><variable citdl="deps[]" line="690" name="dep" /><variable citdl="count()" line="759" name="skip" /><variable citdl="string" line="731" name="chan" /><variable citdl="this._analyzeDownloadURL()" line="862" name="ret" /><variable citdl="this._downloader._getDepPackageDownloadUrl()" line="730" name="url" /><variable citdl="this._installRegistry.packageInfo()" line="827" name="version" /><variable citdl="this._installRegistry.getPackage()" line="744" name="obj" /><variable citdl="array()" line="689" name="skipnames" /></scope><scope ilk="function" line="884" lineend="887" name="setDownloadURL" signature="setDownloadURL($pkg)"><variable ilk="argument" line="884" name="pkg" /></scope><scope doc="&#xA;Set the package.xml object for this downloaded package&#xA;&lt;pear_packagefile_v1|pear_packagefile_v2&gt; $pkg  - &#xA;" ilk="function" line="894" lineend="897" name="setPackageFile" signature="setPackageFile(&amp; $pkg)"><variable ilk="argument" line="894" name="pkg" /></scope><scope ilk="function" line="899" lineend="903" name="getShortName" returns="this._registry.parsedPackageNameToString()" signature="getShortName()" /><scope ilk="function" line="905" lineend="914" name="getParsedPackage" returns="array()" signature="getParsedPackage()" /><scope ilk="function" line="916" lineend="919" name="getDownloadURL" returns="this._downloadURL" signature="getDownloadURL()" /><scope ilk="function" line="921" lineend="928" name="canDefault" returns="boolean" signature="canDefault()" /><scope ilk="function" line="930" lineend="939" name="getPackage" returns="this._packagefile.getPackage()" signature="getPackage()" /><scope doc="@param PEAR_PackageFile_v1|PEAR_PackageFile_v2" ilk="function" line="944" lineend="953" name="isSubpackage" returns="this._packagefile.isSubpackage()" signature="isSubpackage(&amp; $pf)"><variable ilk="argument" line="944" name="pf" /></scope><scope ilk="function" line="955" lineend="964" name="getPackageType" returns="this._packagefile.getPackageType()" signature="getPackageType()" /><scope ilk="function" line="966" lineend="973" name="isBundle" returns="this._packagefile.getPackageType()" signature="isBundle()" /><scope ilk="function" line="975" lineend="984" name="getPackageXmlVersion" returns="this._packagefile.getPackagexmlVersion()" signature="getPackageXmlVersion()" /><scope ilk="function" line="986" lineend="995" name="getChannel" returns="this._packagefile.getChannel()" signature="getChannel()" /><scope ilk="function" line="997" lineend="1006" name="getURI" returns="this._packagefile.getURI()" signature="getURI()" /><scope ilk="function" line="1008" lineend="1017" name="getVersion" returns="this._packagefile.getVersion()" signature="getVersion()" /><scope ilk="function" line="1019" lineend="1028" name="isCompatible" returns="this._packagefile.isCompatible()" signature="isCompatible($pf)"><variable ilk="argument" line="1019" name="pf" /></scope><scope ilk="function" line="1030" lineend="1033" name="setGroup" signature="setGroup($group)"><variable ilk="argument" line="1030" name="group" /></scope><scope ilk="function" line="1035" lineend="1042" name="getGroup" returns="this._parsedname" signature="getGroup()" /><scope ilk="function" line="1044" lineend="1057" name="isExtension" returns="this._packagefile.isExtension()" signature="isExtension($name)"><variable ilk="argument" line="1044" name="name" /></scope><scope ilk="function" line="1059" lineend="1078" name="getDeps" returns="this._packagefile.getDeps()" signature="getDeps()"><variable citdl="this._packagefile.getPackagexmlVersion()" line="1062" name="ver" /></scope><scope doc="&#xA;&lt;array&gt; Parsed  - array from {@link PEAR_Registry::parsePackageName()} or a dependency&#xA;                    returned from getDepDownloadURL()&#xA;" ilk="function" line="1084" lineend="1168" name="isEqual" returns="boolean" signature="isEqual($param)"><variable ilk="argument" line="1084" name="param" /><variable citdl="PEAR_Dependency2.normalizeDep()" line="1118" name="newdep" /><variable citdl="string" line="1087" name="channel" /><variable citdl="param.getPackage()" line="1088" name="package" /></scope><scope ilk="function" line="1170" lineend="1231" name="isInstalled" returns="boolean" signature="isInstalled($dep, $oper = &apos;==&apos;)"><variable ilk="argument" line="1170" name="dep" /><variable default="&apos;==&apos;" ilk="argument" line="1170" name="oper" /><variable citdl="this._installRegistry.packageExists()" line="1204" name="test" /><variable citdl="this._installRegistry.packageInfo()" line="1219" name="packageVersion" /><variable citdl="this._downloader.getOptions()" line="1203" name="options" /><variable citdl="string" line="1182" name="channel" /><variable citdl="dep" line="1181" name="package" /></scope><scope attributes="public static" doc="&#xA;Detect duplicate package names with differing versions&#xA;If a user requests to install Date 1.4.6 and Date 1.4.7,&#xA;for instance, this is a logic error.  This method&#xA;detects this situation.&#xA;&lt;array&gt; $params  - array of PEAR_Downloader_Package objects&#xA;&lt;array&gt; $errorparams  - empty array&#xA;Returns array  - array of stupid duplicated packages in PEAR_Downloader_Package obejcts&#xA;" ilk="function" line="1244" lineend="1277" name="detectStupidDuplicates" returns="array" signature="array detectStupidDuplicates(array $params, array &amp; $errorparams)"><variable citdl="array" ilk="argument" line="1244" name="params" /><variable citdl="array" ilk="argument" line="1244" name="errorparams" /><variable citdl="indices[]" line="1272" name="index" /><variable citdl="param.getGroup()" line="1250" name="group" /><variable citdl="param.getPackage()" line="1248" name="package" /><variable line="1247" name="i" /><variable citdl="groups[]" line="1264" name="dupes" /><variable citdl="params[]" line="1247" name="param" /><variable citdl="array()" line="1246" name="existing" /><variable citdl="existing[]" line="1263" name="groups" /><variable citdl="array()" line="1262" name="indices" /><variable citdl="param.getChannel()" line="1249" name="channel" /></scope><scope attributes="public static" doc="@param array&#xA;@param bool ignore install groups - for final removal of dupe packages" ilk="function" line="1283" lineend="1332" name="removeDuplicates" signature="removeDuplicates(&amp; $params, $ignoreGroups = false)"><variable ilk="argument" line="1283" name="params" /><variable default="false" ilk="argument" line="1283" name="ignoreGroups" /><variable citdl="array_flip()" line="1300" name="testp" /><variable citdl="ignoreGroups" line="1292" name="group" /><variable citdl="array()" line="1285" name="pnames" /><variable citdl="unset[]" line="1286" name="i" /><variable citdl="params[]" line="1286" name="param" /><variable citdl="array()" line="1323" name="ret" /><variable citdl="array_diff()" line="1299" name="unset" /></scope><scope ilk="function" line="1334" lineend="1337" name="explicitState" returns="this._explicitState" signature="explicitState()" /><scope ilk="function" line="1339" lineend="1342" name="setExplicitState" signature="setExplicitState($s)"><variable ilk="argument" line="1339" name="s" /></scope><scope attributes="public static" doc="&#xA;" ilk="function" line="1346" lineend="1469" name="mergeDependencies" returns="dir" signature="mergeDependencies(&amp; $params)"><variable ilk="argument" line="1346" name="params" /><variable line="1370" name="fp" /><variable citdl="dir" line="1389" name="a" /><variable citdl="param.getDownloader()" line="1364" name="dl" /><variable citdl="PEAR_Downloader_Package" line="1383" name="obj" /><variable citdl="array()" line="1415" name="newparams" /><variable citdl="array_merge()" line="1421" name="merge" /><variable citdl="bundles[]" line="1349" name="i" /><variable citdl="newparams" line="1348" name="bundles" /><variable citdl="params[]" line="1349" name="param" /><variable citdl="newparams[]" line="1412" name="unused" /><variable citdl="pf.getFileContents()" line="1363" name="filecontents" /><variable citdl="param.getPackageFile()" line="1355" name="pf" /><variable citdl="contents[]" line="1362" name="file" /><variable citdl="array()" line="1356" name="newdeps" /><variable citdl="obj._fromFile()" line="1390" name="e" /><variable citdl="param._downloadDeps[]" line="1420" name="dep" /><variable citdl="dl.getOptions()" line="1365" name="options" /><variable citdl="pf.getBundledPackages()" line="1357" name="contents" /></scope><scope attributes="public static" doc="&#xA;" ilk="function" line="1474" lineend="1487" name="willDownload" returns="boolean" signature="willDownload($param, $params)"><variable ilk="argument" line="1474" name="param" /><variable ilk="argument" line="1474" name="params" /><variable citdl="params[]" line="1480" name="obj" /></scope><scope doc="For simpler unit-testing&#xA;@param PEAR_Config&#xA;@param int&#xA;@param string" ilk="function" line="1495" lineend="1499" name="getPackagefileObject" returns="a" signature="&amp;getPackagefileObject(&amp; $c, $d)"><variable ilk="argument" line="1495" name="c" /><variable ilk="argument" line="1495" name="d" /><variable citdl="PEAR_PackageFile" line="1497" name="a" /></scope><scope doc="&#xA;This will retrieve from a local file if possible, and parse out&#xA;a group name as well.  The original parameter will be modified to reflect this.&#xA;&lt;string|array&gt; can  - be a parsed package name as well&#xA;Access private&#xA;" ilk="function" line="1507" lineend="1542" name="_fromFile" returns="pf" signature="_fromFile(&amp; $param)"><variable ilk="argument" line="1507" name="param" /><variable citdl="array_pop()" line="1513" name="group" /><variable citdl="param" line="1509" name="saveparam" /><variable citdl="pkg.fromAnyFile()" line="1526" name="pf" /><variable citdl="this.getPackagefileObject()" line="1524" name="pkg" /><variable citdl="explode()" line="1512" name="test" /><variable citdl="this._downloader.getOptions()" line="1523" name="options" /></scope><scope ilk="function" line="1544" lineend="1632" name="_fromUrl" returns="dir" signature="_fromUrl($param, $saveparam = &apos;&apos;)"><variable ilk="argument" line="1544" name="param" /><variable default="&apos;&apos;" ilk="argument" line="1544" name="saveparam" /><variable citdl="Archive_Tar" line="1572" name="tar" /><variable citdl="PEAR.raiseError()" line="1566" name="err" /><variable citdl="tar.extractInString()" line="1573" name="packagexml" /><variable citdl="this._downloader.ui" line="1550" name="callback" /><variable citdl="pkg.fromAnyFile()" line="1599" name="pf" /><variable citdl="this.getPackagefileObject()" line="1596" name="pkg" /><variable citdl="this._downloader.downloadHttp()" line="1559" name="file" /><variable citdl="this._downloader.getOptions()" line="1547" name="options" /><variable citdl="saveparam" line="1620" name="out" /></scope><scope doc="&#xA;&lt;string|array&gt; pass  - in an array of format&#xA;                    array(&#xA;                     &apos;package&apos; =&gt; &apos;pname&apos;,&#xA;                    [&apos;channel&apos; =&gt; &apos;channame&apos;,]&#xA;                    [&apos;version&apos; =&gt; &apos;version&apos;,]&#xA;                    [&apos;state&apos; =&gt; &apos;state&apos;,])&#xA;                    or a string of format [channame/]pname[-version|-state]&#xA;" ilk="function" line="1644" lineend="1738" name="_fromString" returns="boolean" signature="_fromString($param)"><variable ilk="argument" line="1644" name="param" /><variable citdl="this._downloader._getPackageDownloadUrl()" line="1706" name="info" /><variable citdl="PEAR.raiseError()" line="1683" name="err" /><variable citdl="this._analyzeDownloadURL()" line="1729" name="ret" /><variable citdl="pname.getUserInfo()" line="1658" name="parsed" /><variable citdl="this._registry.parsePackageName()" line="1649" name="pname" /><variable citdl="this._downloader.getOptions()" line="1646" name="options" /><variable citdl="this._config.get()" line="1647" name="channel" /></scope><scope doc="&#xA;&lt;array&gt; output  - of package.getDownloadURL&#xA;&lt;string|array|object&gt; information  - for detecting packages to be downloaded, and&#xA;                           for errors&#xA;&lt;array&gt; name  - information of the package&#xA;&lt;array|null&gt; packages  - to be downloaded&#xA;&lt;bool&gt; is  - this an optional dependency?&#xA;&lt;bool&gt; is  - this any kind of dependency?&#xA;Access private&#xA;" ilk="function" line="1750" lineend="1980" name="_analyzeDownloadURL" returns="boolean" signature="_analyzeDownloadURL($info, $param, $pname, $params = null, $optional = false, $isdependency = false)"><variable ilk="argument" line="1750" name="info" /><variable ilk="argument" line="1750" name="param" /><variable ilk="argument" line="1750" name="pname" /><variable default="null" ilk="argument" line="1750" name="params" /><variable default="false" ilk="argument" line="1750" name="optional" /><variable default="false" ilk="argument" line="1750" name="isdependency" /><variable citdl="boolean" line="1766" name="err" /><variable line="1758" name="saveparam" /><variable citdl="this._registry.packageInfo()" line="1789" name="package_version" /><variable citdl="this._registry.packageInfo()" line="1949" name="stability" /><variable citdl="string" line="1824" name="vs" /><variable citdl="string" line="1820" name="instead" /><variable citdl="this._downloader.getOptions()" line="1929" name="options" /><variable citdl="this._config.get()" line="1786" name="preferred_state" /></scope></scope></scope>
<scope ilk="blob" lang="PHP" name="Getopt.php" src="/usr/share/pear/Console/Getopt.php"><import line="21" module="PEAR.php" /><scope doc="Command-line options parsing class.&#xA;&#xA;@category Console&#xA;@package  Console_Getopt&#xA;@author   Andrei Zmievski &lt;andrei@php.net&gt;&#xA;@license  http://opensource.org/licenses/bsd-license.php BSD-2-Clause&#xA;@link     http://pear.php.net/package/Console_Getopt" ilk="class" line="32" lineend="365" name="Console_Getopt"><scope attributes="public static" doc="&#xA;Parses the command-line options.&#xA;The first parameter to this function should be the list of command-line&#xA;arguments without the leading reference to the running program.&#xA;The second parameter is a string of allowed short options. Each of the&#xA;option letters can be followed by a colon &apos;:&apos; to specify that the option&#xA;requires an argument, or a double colon &apos;::&apos; to specify that the option&#xA;takes an optional argument.&#xA;The third argument is an optional array of allowed long options. The&#xA;leading &apos;--&apos; should not be included in the option name. Options that&#xA;require an argument should be followed by &apos;=&apos;, and options that take an&#xA;option argument should be followed by &apos;==&apos;.&#xA;The return value is an array of two elements: the list of parsed&#xA;options and the list of non-option command-line arguments. Each entry in&#xA;the list of parsed options is a pair of elements - the first one&#xA;specifies the option, and the second one specifies the option argument,&#xA;if there was one.&#xA;Long and short options can be mixed.&#xA;Most of the semantics of this function are based on GNU getopt_long().&#xA;&lt;array&gt; $args  - an array of command-line arguments&#xA;&lt;string&gt; $short_options  - specifies the list of allowed short options&#xA;&lt;array&gt; $long_options  - specifies the list of allowed long options&#xA;&lt;boolean&gt; $skip_unknown  - suppresses Console_Getopt: unrecognized option&#xA;Returns array  - two-element array containing the list of parsed options and&#xA;the non-option arguments&#xA;" ilk="function" line="69" lineend="72" name="getopt2" returns="array" signature="array getopt2(array $args, string $short_options, array $long_options = null, boolean $skip_unknown = false)"><variable citdl="array" ilk="argument" line="69" name="args" /><variable citdl="string" ilk="argument" line="69" name="short_options" /><variable citdl="array" default="null" ilk="argument" line="69" name="long_options" /><variable citdl="boolean" default="false" ilk="argument" line="69" name="skip_unknown" /></scope><scope attributes="public static" doc="&#xA;This function expects $args to start with the script name (POSIX-style).&#xA;Preserved for backwards compatibility.&#xA;&lt;array&gt; $args  - an array of command-line arguments&#xA;&lt;string&gt; $short_options  - specifies the list of allowed short options&#xA;&lt;array&gt; $long_options  - specifies the list of allowed long options&#xA;See getopt2()&#xA;Returns array  - two-element array containing the list of parsed options and&#xA;the non-option arguments&#xA;" ilk="function" line="86" lineend="89" name="getopt" returns="array" signature="array getopt(array $args, string $short_options, array $long_options = null, $skip_unknown = false)"><variable citdl="array" ilk="argument" line="86" name="args" /><variable citdl="string" ilk="argument" line="86" name="short_options" /><variable citdl="array" default="null" ilk="argument" line="86" name="long_options" /><variable default="false" ilk="argument" line="86" name="skip_unknown" /></scope><scope attributes="public static" doc="&#xA;The actual implementation of the argument parsing code.&#xA;&lt;int&gt; $version  - Version to use&#xA;&lt;array&gt; $args  - an array of command-line arguments&#xA;&lt;string&gt; $short_options  - specifies the list of allowed short options&#xA;&lt;array&gt; $long_options  - specifies the list of allowed long options&#xA;&lt;boolean&gt; $skip_unknown  - suppresses Console_Getopt: unrecognized option&#xA;Returns array &#xA;" ilk="function" line="102" lineend="172" name="doGetopt" returns="array" signature="array doGetopt(int $version, array $args, string $short_options, array $long_options = null, boolean $skip_unknown = false)"><variable citdl="int" ilk="argument" line="102" name="version" /><variable citdl="array" ilk="argument" line="102" name="args" /><variable citdl="string" ilk="argument" line="102" name="short_options" /><variable citdl="array" default="null" ilk="argument" line="102" name="long_options" /><variable citdl="boolean" default="false" ilk="argument" line="102" name="skip_unknown" /><variable line="131" name="i" /><variable citdl="Console_Getopt._parseLongOption()" line="150" name="error" /><variable citdl="array_merge()" line="113" name="non_opts" /><variable citdl="args" line="132" name="arg" /></scope><scope attributes="protected static" doc="&#xA;Parse short option&#xA;&lt;string&gt; $arg  - Argument&#xA;&lt;string[]&gt; $short_options  - Available short options&#xA;&lt;string[][]&gt; &amp;$opts  - &#xA;&lt;int&gt; &amp;$argIdx  - &#xA;&lt;string[]&gt; $args  - &#xA;&lt;boolean&gt; $skip_unknown  - suppresses Console_Getopt: unrecognized option&#xA;Returns void &#xA;" ilk="function" line="186" lineend="233" name="_parseShortOption" signature="void _parseShortOption(string $arg, $short_options, &amp; $opts, &amp; $argIdx, $args, boolean $skip_unknown)"><variable citdl="string" ilk="argument" line="186" name="arg" /><variable ilk="argument" line="186" name="short_options" /><variable ilk="argument" line="186" name="opts" /><variable ilk="argument" line="186" name="argIdx" /><variable ilk="argument" line="186" name="args" /><variable citdl="boolean" ilk="argument" line="186" name="skip_unknown" /><variable line="188" name="i" /><variable citdl="arg" line="189" name="opt" /><variable citdl="string" line="198" name="msg" /><variable citdl="args" line="190" name="opt_arg" /></scope><scope attributes="protected static" doc="&#xA;Checks if an argument is a short option&#xA;&lt;string&gt; $arg  - Argument to check&#xA;Returns bool &#xA;" ilk="function" line="242" lineend="246" name="_isShortOpt" returns="bool" signature="bool _isShortOpt(string $arg)"><variable citdl="string" ilk="argument" line="242" name="arg" /></scope><scope attributes="protected static" doc="&#xA;Checks if an argument is a long option&#xA;&lt;string&gt; $arg  - Argument to check&#xA;Returns bool &#xA;" ilk="function" line="255" lineend="259" name="_isLongOpt" returns="bool" signature="bool _isLongOpt(string $arg)"><variable citdl="string" ilk="argument" line="255" name="arg" /></scope><scope attributes="protected static" doc="&#xA;Parse long option&#xA;&lt;string&gt; $arg  - Argument&#xA;&lt;string[]&gt; $long_options  - Available long options&#xA;&lt;string[][]&gt; &amp;$opts  - &#xA;&lt;int&gt; &amp;$argIdx  - &#xA;&lt;string[]&gt; $args  - &#xA;Returns void|pear_error &#xA;" ilk="function" line="272" lineend="341" name="_parseLongOption" signature="void _parseLongOption(string $arg, $long_options, &amp; $opts, &amp; $argIdx, $args, $skip_unknown)"><variable citdl="string" ilk="argument" line="272" name="arg" /><variable ilk="argument" line="272" name="long_options" /><variable ilk="argument" line="272" name="opts" /><variable ilk="argument" line="272" name="argIdx" /><variable ilk="argument" line="272" name="args" /><variable ilk="argument" line="272" name="skip_unknown" /><variable citdl="long_options" line="279" name="long_opt" /><variable citdl="strlen()" line="276" name="opt_len" /><variable citdl="args" line="318" name="opt_arg" /><variable line="278" name="i" /><variable citdl="string" line="305" name="msg" /><variable citdl="substr()" line="280" name="opt_start" /><variable citdl="substr()" line="289" name="opt_rest" /><variable citdl="substr()" line="294" name="next_option_rest" /><variable citdl="str_replace()" line="282" name="long_opt_name" /></scope><scope attributes="public static" doc="&#xA;Safely read the $argv PHP array across different PHP configurations.&#xA;Will take care on register_globals and register_argc_argv ini directives&#xA;Returns mixed  - the $argv PHP array or PEAR error if not registered&#xA;" ilk="function" line="349" lineend="363" name="readPHPArgv" returns="mixed" signature="mixed readPHPArgv()"><variable citdl="string" line="355" name="msg" /><variable attributes="__not_yet_defined__" line="351" name="argv" /></scope></scope></scope>